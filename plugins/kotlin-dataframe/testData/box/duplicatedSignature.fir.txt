FILE: Test.kt
    package org.jetbrains.kotlinx.dataframe

    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public abstract interface Schema : R|kotlin/Any| {
        public abstract val a: R|kotlin/Int|
            public get(): R|kotlin/Int|

    }
    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public abstract interface Log : R|kotlin/Any| {
        public abstract val timestamp: R|kotlin/Long|
            public get(): R|kotlin/Long|

        public abstract val message: R|kotlin/String|
            public get(): R|kotlin/String|

    }
    public final fun main(args: R|kotlin/Array<kotlin/String>|): R|kotlin/Unit| {
        lval res: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Schema_09>| = R|org/jetbrains/kotlinx/dataframe/api/dataFrameOf|(vararg(String(a))).R|org/jetbrains/kotlinx/dataframe/api/DataFrameBuilder.invoke|(vararg(Int(1))).R|org/jetbrains/kotlinx/dataframe/api/cast|<R|org/jetbrains/kotlinx/dataframe/Schema|>().R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Schema>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Schema_09>|>(<L> = fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Schema>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Schema_09>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class Schema_09I : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(1)) public abstract val ba: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public constructor(): R|<local>/Schema_09I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Schema_09I>|.ba: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Schema_09I>|.ba: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Schema_09I>|.a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Schema_09I>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class Schema_09 : R|<local>/Schema_09I| {
                public abstract var scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|
                    public set(value: R|<local>/Scope0|): R|kotlin/Unit|

                public constructor(): R|<local>/Schema_09|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/add|<R|kotlin/Int|, R|org/jetbrains/kotlinx/dataframe/Schema|>(String(ba), <L> = add@fun R|org/jetbrains/kotlinx/dataframe/api/AddDataRow<org/jetbrains/kotlinx/dataframe/Schema>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/api/AddDataRow<org/jetbrains/kotlinx/dataframe/Schema>|): R|kotlin/Int| <inline=NoInline>  {
                ^ Int(42)
            }
            )
        }
        )
        (this@R|org/jetbrains/kotlinx/dataframe/main|, R|<local>/res|).R|<local>/Scope0.ba|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Int|>()
        (this@R|org/jetbrains/kotlinx/dataframe/main|, R|<local>/res|).R|<local>/Scope0.a|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Int|>()
        lval a: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/With_65>| = R|<local>/res|.R|org/jetbrains/kotlinx/dataframe/api/convert|<R|<local>/Schema_09|, R|kotlin/Int|>(<L> = convert@fun R|org/jetbrains/kotlinx/dataframe/api/ColumnsSelectionDsl<<local>/Schema_09>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/api/ColumnsSelectionDsl<<local>/Schema_09>|): R|org/jetbrains/kotlinx/dataframe/columns/ColumnsResolver<kotlin/Int>| <inline=NoInline>  {
            ^ (this@R|org/jetbrains/kotlinx/dataframe/main|, this@R|special/anonymous|).R|<local>/Scope0.a|
        }
        ).R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/api/Convert<<local>/Schema_09, kotlin/Int>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/With_65>|>(<L> = fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/api/Convert<<local>/Schema_09, kotlin/Int>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/With_65>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class With_65I : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(1)) public abstract val ba: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val a: R|kotlin/Char|
                    public get(): R|kotlin/Char|

                public constructor(): R|<local>/With_65I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/With_65I>|.ba: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/With_65I>|.ba: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/With_65I>|.a: R|kotlin/Char|
                    public get(): R|kotlin/Char|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/With_65I>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Char>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Char>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class With_65 : R|<local>/With_65I| {
                public abstract var scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|
                    public set(value: R|<local>/Scope0|): R|kotlin/Unit|

                public constructor(): R|<local>/With_65|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/with|<R|<local>/Schema_09|, R|kotlin/Int|, R|kotlin/Char|>(<L> = with@fun R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Schema_09>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  kotlin/Int|): R|kotlin/Char| <inline=NoInline>  {
                ^ R|<local>/it|.R|kotlin/text/digitToChar|()
            }
            )
        }
        )
        lval str: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Char>| = (this@R|org/jetbrains/kotlinx/dataframe/main|, R|<local>/a|).R|<local>/Scope0.a|
        R|kotlin/io/print|(R|<local>/str|)
    }
FILE: duplicatedSignature.kt
    package org.jetbrains.kotlinx.dataframe

    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public abstract interface ActivePlayer : R|kotlin/Any| {
        public abstract val char: R|kotlin/Int|
            public get(): R|kotlin/Int|

        public abstract val level: R|kotlin/Int|
            public get(): R|kotlin/Int|

        public abstract val race: R|kotlin/String|
            public get(): R|kotlin/String|

        public abstract val charclass: R|kotlin/String|
            public get(): R|kotlin/String|

        public abstract val zone: R|kotlin/String|
            public get(): R|kotlin/String|

        public abstract val guild: R|kotlin/Int|
            public get(): R|kotlin/Int|

        public abstract val timestamp: R|kotlin/String|
            public get(): R|kotlin/String|

    }
    public final fun box(): R|kotlin/String| {
        lval df: R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/ActivePlayer>| = R|org/jetbrains/kotlinx/dataframe/api/dataFrameOf|(vararg(String(char), String(level), String(race), String(charclass), String(zone), String(guild), String(timestamp))).R|org/jetbrains/kotlinx/dataframe/api/DataFrameBuilder.invoke|(vararg(Int(59425), Int(1), String(Orc), String(Rogue), String(Orgrimmar), Int(165), String(01/01/08 00:02:04))).R|org/jetbrains/kotlinx/dataframe/api/cast|<R|org/jetbrains/kotlinx/dataframe/ActivePlayer|>(Boolean(true))
        lval format: R|java/time/format/DateTimeFormatter!| = Q|java/time/format/DateTimeFormatter|.R|java/time/format/DateTimeFormatter.ofPattern*s|(String(MM/dd/yy HH:mm:ss))
        lval df1: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/With_63>| = R|<local>/df|.R|org/jetbrains/kotlinx/dataframe/api/convert|<R|org/jetbrains/kotlinx/dataframe/ActivePlayer|, R|kotlin/String|>(<L> = convert@fun R|org/jetbrains/kotlinx/dataframe/api/ColumnsSelectionDsl<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/api/ColumnsSelectionDsl<org/jetbrains/kotlinx/dataframe/ActivePlayer>|): R|org/jetbrains/kotlinx/dataframe/columns/ColumnsResolver<kotlin/String>| <inline=NoInline>  {
            ^ this@R|special/anonymous|.R|org/jetbrains/kotlinx/dataframe/timestamp|
        }
        ).R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/api/Convert<org/jetbrains/kotlinx/dataframe/ActivePlayer, kotlin/String>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/With_63>|>(<L> = fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/api/Convert<org/jetbrains/kotlinx/dataframe/ActivePlayer, kotlin/String>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/With_63>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class With_63I : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(6)) public abstract val timestamp: R|java/time/LocalDateTime|
                    public get(): R|java/time/LocalDateTime|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(3)) public abstract val charclass: R|kotlin/String|
                    public get(): R|kotlin/String|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(5)) public abstract val guild: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val char: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(2)) public abstract val race: R|kotlin/String|
                    public get(): R|kotlin/String|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(1)) public abstract val level: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(4)) public abstract val zone: R|kotlin/String|
                    public get(): R|kotlin/String|

                public constructor(): R|<local>/With_63I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/With_63I>|.timestamp: R|java/time/LocalDateTime|
                    public get(): R|java/time/LocalDateTime|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/With_63I>|.timestamp: R|org/jetbrains/kotlinx/dataframe/DataColumn<java/time/LocalDateTime>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<java/time/LocalDateTime>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/With_63I>|.charclass: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/With_63I>|.charclass: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/With_63I>|.guild: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/With_63I>|.guild: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/With_63I>|.char: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/With_63I>|.char: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/With_63I>|.race: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/With_63I>|.race: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/With_63I>|.level: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/With_63I>|.level: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/With_63I>|.zone: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/With_63I>|.zone: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class With_63 : R|<local>/With_63I| {
                public abstract var scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|
                    public set(value: R|<local>/Scope0|): R|kotlin/Unit|

                public constructor(): R|<local>/With_63|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/with|<R|org/jetbrains/kotlinx/dataframe/ActivePlayer|, R|kotlin/String|, R|java/time/LocalDateTime|>(<L> = with@fun R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  kotlin/String|): R|java/time/LocalDateTime| <inline=NoInline>  {
                ^ Q|java/time/LocalDateTime|.R|java/time/LocalDateTime.parse*s|(R|<local>/it|, R|<local>/format|)!!
            }
            )
        }
        )
        R|<local>/df1|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|<local>/With_63|>()
        ^box String(OK)
    }
FILE: __GENERATED DECLARATIONS__.kt
    package org.jetbrains.kotlinx.dataframe

    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Schema>|.a: R|kotlin/Int|
        public get(): R|kotlin/Int|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Schema>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Log>|.timestamp: R|kotlin/Long|
        public get(): R|kotlin/Long|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Log>|.timestamp: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Long>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Long>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.timestamp: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.timestamp: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Log>|.message: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Log>|.message: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.char: R|kotlin/Int|
        public get(): R|kotlin/Int|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.char: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.level: R|kotlin/Int|
        public get(): R|kotlin/Int|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.level: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.race: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.race: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.charclass: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.charclass: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.zone: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.zone: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.guild: R|kotlin/Int|
        public get(): R|kotlin/Int|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/ActivePlayer>|.guild: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
