FILE: toDataFrame.kt
    public final enum class Switch : R|kotlin/Enum<Switch>| {
        private constructor(): R|Switch| {
            super<R|kotlin/Enum<Switch>|>()
        }

        public final static enum entry ON: R|Switch|
        public final static enum entry OFF: R|Switch|
        public final static fun values(): R|kotlin/Array<Switch>| {
        }

        public final static fun valueOf(value: R|kotlin/String|): R|Switch| {
        }

        public final static val entries: R|kotlin/enums/EnumEntries<Switch>|
            public get(): R|kotlin/enums/EnumEntries<Switch>|

    }
    public final class Ss : R|kotlin/Any| {
        public constructor(s3: R|kotlin/Int|): R|Ss| {
            super<R|kotlin/Any|>()
        }

        public final val s3: R|kotlin/Int| = R|<local>/s3|
            public get(): R|kotlin/Int|

    }
    public final class Record : R|kotlin/Any| {
        public constructor(r: R|kotlin/String|): R|Record| {
            super<R|kotlin/Any|>()
        }

        public final val r: R|kotlin/String| = R|<local>/r|
            public get(): R|kotlin/String|

    }
    public final class S : R|kotlin/Any| {
        public constructor(str: R|kotlin/String|, s1: R|kotlin/Int|, s2: R|Ss|, switch: R|Switch|, temporal: R|java/time/Year|, boolean: R|kotlin/Boolean|, instant: R|kotlinx/datetime/Instant|, numberI: R|kotlin/Int|, number: R|kotlin/Number|, numberFloat: R|kotlin/Float|, ll: R|kotlin/collections/List<kotlin/String>|, lld: R|kotlin/collections/List<Record>|, nullableNumber: R|kotlin/Int?|): R|S| {
            super<R|kotlin/Any|>()
        }

        public final val str: R|kotlin/String| = R|<local>/str|
            public get(): R|kotlin/String|

        public final val s1: R|kotlin/Int| = R|<local>/s1|
            public get(): R|kotlin/Int|

        public final val s2: R|Ss| = R|<local>/s2|
            public get(): R|Ss|

        public final val switch: R|Switch| = R|<local>/switch|
            public get(): R|Switch|

        public final val temporal: R|java/time/Year| = R|<local>/temporal|
            public get(): R|java/time/Year|

        public final val boolean: R|kotlin/Boolean| = R|<local>/boolean|
            public get(): R|kotlin/Boolean|

        public final val instant: R|kotlinx/datetime/Instant| = R|<local>/instant|
            public get(): R|kotlinx/datetime/Instant|

        public final val numberI: R|kotlin/Int| = R|<local>/numberI|
            public get(): R|kotlin/Int|

        public final val number: R|kotlin/Number| = R|<local>/number|
            public get(): R|kotlin/Number|

        public final val numberFloat: R|kotlin/Float| = R|<local>/numberFloat|
            public get(): R|kotlin/Float|

        public final val ll: R|kotlin/collections/List<kotlin/String>| = R|<local>/ll|
            public get(): R|kotlin/collections/List<kotlin/String>|

        public final val lld: R|kotlin/collections/List<Record>| = R|<local>/lld|
            public get(): R|kotlin/collections/List<Record>|

        public final val nullableNumber: R|kotlin/Int?| = R|<local>/nullableNumber|
            public get(): R|kotlin/Int?|

    }
    public final fun box(): R|kotlin/String| {
        lval res: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/S_43>| = R|kotlin/collections/listOf|<R|S|>(R|/S.S|(String(123), Int(321), R|/Ss.Ss|(Int(12)), Q|Switch|.R|/Switch.ON|, Q|java/time/Year|.R|java/time/Year.now*s|(), Boolean(true), Q|kotlinx/datetime/Clock.System|.R|kotlinx/datetime/Clock.System.now|(), Int(12), Int(12), Float(12.0), R|kotlin/collections/listOf|<R|kotlin/String|>(String(dd)), R|kotlin/collections/listOf|<R|Record|>(R|/Record.Record|(String(ff))), Null(null))).R|kotlin/let|<R|kotlin/collections/List<S>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/S_43>|>(<L> = fun <anonymous>(it: R|kotlin/collections/List<S>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/S_43>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class S_43I : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(2)) public abstract val s2: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S2_291>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S2_291>|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(10)) public abstract val ll: R|kotlin/collections/List<kotlin/String>|
                    public get(): R|kotlin/collections/List<kotlin/String>|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(1)) public abstract val s1: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(9)) public abstract val numberFloat: R|kotlin/Float|
                    public get(): R|kotlin/Float|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(12)) public abstract val nullableNumber: R|kotlin/Int?|
                    public get(): R|kotlin/Int?|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(6)) public abstract val instant: R|kotlinx/datetime/Instant|
                    public get(): R|kotlinx/datetime/Instant|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(5)) public abstract val boolean: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(4)) public abstract val temporal: R|java/time/Year|
                    public get(): R|java/time/Year|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(11)) public abstract val lld: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_291>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_291>|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(7)) public abstract val numberI: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(8)) public abstract val number: R|kotlin/Number|
                    public get(): R|kotlin/Number|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(3)) public abstract val switch: R|Switch|
                    public get(): R|Switch|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val str: R|kotlin/String|
                    public get(): R|kotlin/String|

                public constructor(): R|<local>/S_43I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.s2: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S2_291>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S2_291>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.s2: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/S2_291>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/S2_291>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.ll: R|kotlin/collections/List<kotlin/String>|
                    public get(): R|kotlin/collections/List<kotlin/String>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.ll: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/collections/List<kotlin/String>>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/collections/List<kotlin/String>>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.s1: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.s1: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.numberFloat: R|kotlin/Float|
                    public get(): R|kotlin/Float|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.numberFloat: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Float>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Float>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.nullableNumber: R|kotlin/Int?|
                    public get(): R|kotlin/Int?|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.nullableNumber: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int?>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int?>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.instant: R|kotlinx/datetime/Instant|
                    public get(): R|kotlinx/datetime/Instant|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.instant: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlinx/datetime/Instant>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlinx/datetime/Instant>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.boolean: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.boolean: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.temporal: R|java/time/Year|
                    public get(): R|java/time/Year|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.temporal: R|org/jetbrains/kotlinx/dataframe/DataColumn<java/time/Year>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<java/time/Year>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.lld: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_291>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_291>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.lld: R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_291>>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_291>>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.numberI: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.numberI: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.number: R|kotlin/Number|
                    public get(): R|kotlin/Number|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.number: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Number>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Number>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.switch: R|Switch|
                    public get(): R|Switch|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.switch: R|org/jetbrains/kotlinx/dataframe/DataColumn<Switch>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<Switch>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_43I>|.str: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_43I>|.str: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class Lld_291 : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val r: R|kotlin/String|
                    public get(): R|kotlin/String|

                public constructor(): R|<local>/Lld_291|

            }

            local final class Scope2 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Lld_291>|.r: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Lld_291>|.r: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public constructor(): R|<local>/Scope2|

            }

            local abstract class S2_291 : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val s3: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public constructor(): R|<local>/S2_291|

            }

            local final class Scope1 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S2_291>|.s3: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S2_291>|.s3: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public constructor(): R|<local>/Scope1|

            }

            local abstract class S_43 : R|<local>/S_43I| {
                public abstract var scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|
                    public set(value: R|<local>/Scope0|): R|kotlin/Unit|

                public abstract var scope2: R|<local>/Scope2|
                    public get(): R|<local>/Scope2|
                    public set(value: R|<local>/Scope2|): R|kotlin/Unit|

                public abstract var scope1: R|<local>/Scope1|
                    public get(): R|<local>/Scope1|
                    public set(value: R|<local>/Scope1|): R|kotlin/Unit|

                public constructor(): R|<local>/S_43|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/toDataFrame|<R|S|>(Int(2))
        }
        )
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.str|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/String|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.s1|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Int|>()
        (this@R|/box|, (this@R|/box|, R|<local>/res|).R|<local>/Scope0.s2|).R|<local>/Scope1.s3|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Int|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.switch|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|Switch|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.temporal|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|java/time/Year|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.boolean|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Boolean|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.instant|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlinx/datetime/Instant|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.numberI|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Int|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.number|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Number|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.numberFloat|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Float|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.ll|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/collections/List<kotlin/String>|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.lld|.R|org/jetbrains/kotlinx/dataframe/api/forEach|<R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_291>|>(<L> = forEach@fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_291>|): R|kotlin/Unit| <inline=Inline, kind=UNKNOWN>  {
            (this@R|/box|, R|<local>/it|).R|<local>/Scope2.r|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/String|>()
        }
        )
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.nullableNumber|
        ^box String(OK)
    }
