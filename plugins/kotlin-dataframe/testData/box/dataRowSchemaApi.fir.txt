FILE: dataRowSchemaApi.kt
    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public final class Schema : R|kotlin/Any|, R|org/jetbrains/kotlinx/dataframe/api/DataRowSchema| {
        public constructor(a: R|kotlin/Int|, b: R|kotlin/String|): R|Schema| {
            super<R|kotlin/Any|>()
        }

        public final val a: R|kotlin/Int| = R|<local>/a|
            public get(): R|kotlin/Int|

        public final val b: R|kotlin/String| = R|<local>/b|
            public get(): R|kotlin/String|

    }
    public final fun box(): R|kotlin/String| {
        lval df: R|org/jetbrains/kotlinx/dataframe/DataFrame<Schema>| = R|org/jetbrains/kotlinx/dataframe/api/dataFrameOf|<R|Schema|>(vararg(R|/Schema.Schema|(Int(1), String(foo)))).R|org/jetbrains/kotlinx/dataframe/api/append|<R|Schema|>(vararg(R|/Schema.Schema|(Int(2), String(bar))))
        R|<local>/df|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|Schema|>()
        ^box String(OK)
    }
FILE: __GENERATED DECLARATIONS__.kt
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<Schema>|.a: R|kotlin/Int|
        public get(): R|kotlin/Int|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<Schema>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<Schema>|.b: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<Schema>|.b: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
