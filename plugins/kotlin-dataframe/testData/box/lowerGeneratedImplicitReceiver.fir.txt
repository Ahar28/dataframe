FILE: lowerGeneratedImplicitReceiver.kt
    package org.jetbrains.kotlinx.dataframe.api

    public abstract interface Cars : R|kotlin/Any| {
    }
    public final fun box(): R|kotlin/String| {
        lval df: R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/api/Cars>| = R|org/jetbrains/kotlinx/dataframe/api/dataFrameOf|(vararg(String(a))).R|org/jetbrains/kotlinx/dataframe/api/DataFrameBuilder.invoke|(vararg(Int(1))).R|org/jetbrains/kotlinx/dataframe/api/cast|<R|org/jetbrains/kotlinx/dataframe/api/Cars|>()
        lval df1: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenCars_3085480>| = R|<local>/df|.R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/api/Cars>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenCars_3085480>|>(<L> = let@fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/api/Cars>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenCars_3085480>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class DataFrameType1 : R|kotlin/Any| {
                public constructor(): R|<local>/DataFrameType1| {
                    super<R|kotlin/Any|>()
                }

                public abstract val age: R|kotlin/Int|
                    public get(): R|kotlin/Int|

            }

            local final class Scope0 : R|kotlin/Any| {
                public constructor(): R|<local>/Scope0| {
                    super<R|kotlin/Any|>()
                }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.age: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_age)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/age|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(age)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.age: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_age)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/age|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(age)) as R|kotlin/Int|)
                    }

            }

            local abstract class TokenCars_3085480 : R|<local>/DataFrameType1| {
                public constructor(): R|<local>/TokenCars_3085480| {
                    super<R|<local>/DataFrameType1|>()
                }

                public abstract val scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|

            }

            ^ (R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/add|<R|kotlin/Int|, R|org/jetbrains/kotlinx/dataframe/api/Cars|>(String(age), <L> = add@fun R|org/jetbrains/kotlinx/dataframe/api/AddDataRow<org/jetbrains/kotlinx/dataframe/api/Cars>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/api/AddDataRow<org/jetbrains/kotlinx/dataframe/api/Cars>|): R|kotlin/Int| <inline=NoInline>  {
                ^ Int(2022)
            }
            ) as R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenCars_3085480>|)
        }
        )
        lval col: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| = (this@R|org/jetbrains/kotlinx/dataframe/api/box|, R|<local>/df1|).R|<local>/age|
        ^box when () {
            ==(R|<local>/col|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataColumn.get: R|kotlin/Int|>|(Int(0)), Int(2022)) ->  {
                String(OK)
            }
            else ->  {
                R|<local>/col|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataColumn.get: R|kotlin/Int|>|(Int(0)).R|kotlin/Int.toString|()
            }
        }

    }
