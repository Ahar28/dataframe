FILE: readJsonStr_memberProperty.kt
    package org.jetbrains.kotlinx.dataframe

    public final class Tests : R|kotlin/Any| {
        public constructor(): R|org/jetbrains/kotlinx/dataframe/Tests| {
            super<R|kotlin/Any|>()
        }

        public final val text: R|kotlin/String| = String([{"a":null, "b":1},{"a":null, "b":2}])
            public get(): R|kotlin/String|

        public final fun test1(): R|kotlin/Unit| {
            lval df: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/ReadJsonStr_09>| = Q|org/jetbrains/kotlinx/dataframe/DataFrame|.R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/DataFrame.Companion|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/ReadJsonStr_09>|>(<L> = fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/DataFrame.Companion|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/ReadJsonStr_09>| <inline=Inline, kind=EXACTLY_ONCE>  {
                local abstract class ReadJsonStr_09I : R|kotlin/Any| {
                    @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(1)) public abstract val b: R|kotlin/Int|
                        public get(): R|kotlin/Int|

                    @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val a: R|kotlin/Nothing?|
                        public get(): R|kotlin/Nothing?|

                    public constructor(): R|<local>/ReadJsonStr_09I|

                }

                local final class Scope0 : R|kotlin/Any| {
                    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/ReadJsonStr_09I>|.b: R|kotlin/Int|
                        public get(): R|kotlin/Int|

                    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/ReadJsonStr_09I>|.b: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/ReadJsonStr_09I>|.a: R|kotlin/Nothing?|
                        public get(): R|kotlin/Nothing?|

                    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/ReadJsonStr_09I>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Nothing?>|
                        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Nothing?>|

                    public constructor(): R|<local>/Scope0|

                }

                local abstract class ReadJsonStr_09 : R|<local>/ReadJsonStr_09I| {
                    public abstract var scope0: R|<local>/Scope0|
                        public get(): R|<local>/Scope0|
                        public set(value: R|<local>/Scope0|): R|kotlin/Unit|

                    public constructor(): R|<local>/ReadJsonStr_09|

                }

                ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/io/readJsonStr|(this@R|org/jetbrains/kotlinx/dataframe/Tests|.R|org/jetbrains/kotlinx/dataframe/Tests.text|)
            }
            )
            (this@R|org/jetbrains/kotlinx/dataframe/Tests.test1|, R|<local>/df|).R|<local>/Scope0.a|
            (this@R|org/jetbrains/kotlinx/dataframe/Tests.test1|, R|<local>/df|).R|<local>/Scope0.b|
        }

    }
    public final fun box(): R|kotlin/String| {
        R|org/jetbrains/kotlinx/dataframe/Tests.Tests|().R|org/jetbrains/kotlinx/dataframe/Tests.test1|()
        ^box String(OK)
    }
