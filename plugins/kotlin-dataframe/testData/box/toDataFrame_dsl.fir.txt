FILE: toDataFrame_dsl.kt
    public final enum class Switch : R|kotlin/Enum<Switch>| {
        private constructor(): R|Switch| {
            super<R|kotlin/Enum<Switch>|>()
        }

        public final static enum entry ON: R|Switch|
        public final static enum entry OFF: R|Switch|
        public final static fun values(): R|kotlin/Array<Switch>| {
        }

        public final static fun valueOf(value: R|kotlin/String|): R|Switch| {
        }

        public final static val entries: R|kotlin/enums/EnumEntries<Switch>|
            public get(): R|kotlin/enums/EnumEntries<Switch>|

    }
    public final class AnotherRecord : R|kotlin/Any| {
        public constructor(d: R|kotlin/Double|): R|AnotherRecord| {
            super<R|kotlin/Any|>()
        }

        public final val d: R|kotlin/Double| = R|<local>/d|
            public get(): R|kotlin/Double|

    }
    public final class Ss : R|kotlin/Any| {
        public constructor(s3: R|kotlin/Int|, preservedProperty: R|AnotherRecord|): R|Ss| {
            super<R|kotlin/Any|>()
        }

        public final val s3: R|kotlin/Int| = R|<local>/s3|
            public get(): R|kotlin/Int|

        public final val preservedProperty: R|AnotherRecord| = R|<local>/preservedProperty|
            public get(): R|AnotherRecord|

    }
    public final class Record : R|kotlin/Any| {
        public constructor(r: R|kotlin/String|): R|Record| {
            super<R|kotlin/Any|>()
        }

        public final val r: R|kotlin/String| = R|<local>/r|
            public get(): R|kotlin/String|

    }
    public final class PreservedRecord : R|kotlin/Any| {
        public constructor(i: R|kotlin/Int|): R|PreservedRecord| {
            super<R|kotlin/Any|>()
        }

        public final val i: R|kotlin/Int| = R|<local>/i|
            public get(): R|kotlin/Int|

    }
    public final class S : R|kotlin/Any| {
        public constructor(str: R|kotlin/String|, s1: R|kotlin/Int|, s2: R|Ss|, switch: R|Switch|, boolean: R|kotlin/Boolean|, numberI: R|kotlin/Int|, number: R|kotlin/Number|, numberFloat: R|kotlin/Float|, ll: R|kotlin/collections/List<kotlin/String>|, lld: R|kotlin/collections/List<Record>|, nullableNumber: R|kotlin/Int?|, preservedRecord: R|PreservedRecord|): R|S| {
            super<R|kotlin/Any|>()
        }

        public final val str: R|kotlin/String| = R|<local>/str|
            public get(): R|kotlin/String|

        public final val s1: R|kotlin/Int| = R|<local>/s1|
            public get(): R|kotlin/Int|

        public final val s2: R|Ss| = R|<local>/s2|
            public get(): R|Ss|

        public final val switch: R|Switch| = R|<local>/switch|
            public get(): R|Switch|

        public final val boolean: R|kotlin/Boolean| = R|<local>/boolean|
            public get(): R|kotlin/Boolean|

        public final val numberI: R|kotlin/Int| = R|<local>/numberI|
            public get(): R|kotlin/Int|

        public final val number: R|kotlin/Number| = R|<local>/number|
            public get(): R|kotlin/Number|

        public final val numberFloat: R|kotlin/Float| = R|<local>/numberFloat|
            public get(): R|kotlin/Float|

        public final val ll: R|kotlin/collections/List<kotlin/String>| = R|<local>/ll|
            public get(): R|kotlin/collections/List<kotlin/String>|

        public final val lld: R|kotlin/collections/List<Record>| = R|<local>/lld|
            public get(): R|kotlin/collections/List<Record>|

        public final val nullableNumber: R|kotlin/Int?| = R|<local>/nullableNumber|
            public get(): R|kotlin/Int?|

        public final val preservedRecord: R|PreservedRecord| = R|<local>/preservedRecord|
            public get(): R|PreservedRecord|

    }
    public final fun box(): R|kotlin/String| {
        lval res: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/S_28>| = R|kotlin/collections/listOf|<R|S|>(R|/S.S|(String(123), Int(321), R|/Ss.Ss|(Int(12), R|/AnotherRecord.AnotherRecord|(Double(3.0))), Q|Switch|.R|/Switch.ON|, Boolean(true), Int(12), Int(12), Float(12.0), R|kotlin/collections/listOf|<R|kotlin/String|>(String(dd)), R|kotlin/collections/listOf|<R|Record|>(R|/Record.Record|(String(ff))), Null(null), R|/PreservedRecord.PreservedRecord|(Int(3)))).R|kotlin/let|<R|kotlin/collections/List<S>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/S_28>|>(<L> = fun <anonymous>(it: R|kotlin/collections/List<S>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/S_28>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class S_28I : R|kotlin/Any| {
                public abstract val s2: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S2_811>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S2_811>|

                public abstract val ll: R|kotlin/collections/List<kotlin/String>|
                    public get(): R|kotlin/collections/List<kotlin/String>|

                public abstract val number: R|kotlin/Number|
                    public get(): R|kotlin/Number|

                public abstract val numberFloat: R|kotlin/Float|
                    public get(): R|kotlin/Float|

                public abstract val nullableNumber: R|kotlin/Int?|
                    public get(): R|kotlin/Int?|

                public abstract val switch: R|Switch|
                    public get(): R|Switch|

                public abstract val preservedRecord: R|PreservedRecord|
                    public get(): R|PreservedRecord|

                public abstract val str: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val boolean: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                public abstract val lld: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_811>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_811>|

                public constructor(): R|<local>/S_28I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_28I>|.s2: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S2_811>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S2_811>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_28I>|.s2: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/S2_811>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/S2_811>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_28I>|.ll: R|kotlin/collections/List<kotlin/String>|
                    public get(): R|kotlin/collections/List<kotlin/String>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_28I>|.ll: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/collections/List<kotlin/String>>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/collections/List<kotlin/String>>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_28I>|.number: R|kotlin/Number|
                    public get(): R|kotlin/Number|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_28I>|.number: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Number>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Number>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_28I>|.numberFloat: R|kotlin/Float|
                    public get(): R|kotlin/Float|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_28I>|.numberFloat: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Float>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Float>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_28I>|.nullableNumber: R|kotlin/Int?|
                    public get(): R|kotlin/Int?|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_28I>|.nullableNumber: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int?>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int?>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_28I>|.switch: R|Switch|
                    public get(): R|Switch|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_28I>|.switch: R|org/jetbrains/kotlinx/dataframe/DataColumn<Switch>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<Switch>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_28I>|.preservedRecord: R|PreservedRecord|
                    public get(): R|PreservedRecord|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_28I>|.preservedRecord: R|org/jetbrains/kotlinx/dataframe/DataColumn<PreservedRecord>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<PreservedRecord>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_28I>|.str: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_28I>|.str: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_28I>|.boolean: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_28I>|.boolean: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S_28I>|.lld: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_811>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_811>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S_28I>|.lld: R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_811>>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Lld_811>>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class Lld_811 : R|kotlin/Any| {
                public constructor(): R|<local>/Lld_811|

            }

            local final class Scope2 : R|kotlin/Any| {
                public constructor(): R|<local>/Scope2|

            }

            local abstract class S2_811 : R|kotlin/Any| {
                public abstract val preservedProperty: R|AnotherRecord|
                    public get(): R|AnotherRecord|

                public constructor(): R|<local>/S2_811|

            }

            local final class Scope1 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/S2_811>|.preservedProperty: R|AnotherRecord|
                    public get(): R|AnotherRecord|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/S2_811>|.preservedProperty: R|org/jetbrains/kotlinx/dataframe/DataColumn<AnotherRecord>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<AnotherRecord>|

                public constructor(): R|<local>/Scope1|

            }

            local abstract class S_28 : R|<local>/S_28I| {
                public abstract var scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|
                    public set(value: R|<local>/Scope0|): R|kotlin/Unit|

                public abstract var scope2: R|<local>/Scope2|
                    public get(): R|<local>/Scope2|
                    public set(value: R|<local>/Scope2|): R|kotlin/Unit|

                public abstract var scope1: R|<local>/Scope1|
                    public get(): R|<local>/Scope1|
                    public set(value: R|<local>/Scope1|): R|kotlin/Unit|

                public constructor(): R|<local>/S_28|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/toDataFrame|<R|S|>(<L> = toDataFrame@fun R|org/jetbrains/kotlinx/dataframe/api/CreateDataFrameDsl<S>|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
                this@R|special/anonymous|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/api/CreateDataFrameDsl.properties: R|kotlin/Unit|>|(Int(4), <L> = properties@fun R|org/jetbrains/kotlinx/dataframe/api/TraversePropertiesDsl|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
                    this@R|special/anonymous|.R|org/jetbrains/kotlinx/dataframe/api/TraversePropertiesDsl.exclude|(vararg(<getClass>(Q|kotlin/Int|)))
                    this@R|special/anonymous|.R|org/jetbrains/kotlinx/dataframe/api/TraversePropertiesDsl.exclude|(vararg(Q|Record|::R|/Record.r|))
                    this@R|special/anonymous|.R|org/jetbrains/kotlinx/dataframe/api/TraversePropertiesDsl.preserve|(vararg(<getClass>(Q|PreservedRecord|)))
                    this@R|special/anonymous|.R|org/jetbrains/kotlinx/dataframe/api/TraversePropertiesDsl.preserve|(vararg(Q|Ss|::R|/Ss.preservedProperty|))
                }
                )
            }
            )
        }
        )
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.str|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/String|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.switch|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|Switch|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.boolean|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Boolean|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.number|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Number|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.numberFloat|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Float|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.ll|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/collections/List<kotlin/String>|>()
        (this@R|/box|, R|<local>/res|).R|<local>/Scope0.nullableNumber|
        lval preservedRecord: R|org/jetbrains/kotlinx/dataframe/DataColumn<PreservedRecord>| = (this@R|/box|, R|<local>/res|).R|<local>/Scope0.preservedRecord|
        lval anotherRecord: R|org/jetbrains/kotlinx/dataframe/DataColumn<AnotherRecord>| = (this@R|/box|, (this@R|/box|, R|<local>/res|).R|<local>/Scope0.s2|).R|<local>/Scope1.preservedProperty|
        ^box String(OK)
    }
