FILE: extractPluginSchemaWithUnfold.kt
    package org.jetbrains.kotlinx.dataframe

    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public final class Bridge : R|org/jetbrains/kotlinx/dataframe/api/DataRowSchema| {
        public constructor(type: R|org/jetbrains/kotlinx/dataframe/Type|, approximation: R|kotlin/String|, converter: R|kotlin/String|, lens: R|kotlin/String|, supported: R|kotlin/Boolean| = Boolean(false)): R|org/jetbrains/kotlinx/dataframe/Bridge| {
            super<R|kotlin/Any|>()
        }

        public final val type: R|org/jetbrains/kotlinx/dataframe/Type| = R|<local>/type|
            public get(): R|org/jetbrains/kotlinx/dataframe/Type|

        public final val approximation: R|kotlin/String| = R|<local>/approximation|
            public get(): R|kotlin/String|

        public final val converter: R|kotlin/String| = R|<local>/converter|
            public get(): R|kotlin/String|

        public final val lens: R|kotlin/String| = R|<local>/lens|
            public get(): R|kotlin/String|

        public final val supported: R|kotlin/Boolean| = R|<local>/supported|
            public get(): R|kotlin/Boolean|

    }
    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public final data class Type : R|kotlin/Any|, R|org/jetbrains/kotlinx/dataframe/api/DataRowSchema| {
        public constructor(name: R|kotlin/String|, vararg: R|kotlin/Boolean|): R|org/jetbrains/kotlinx/dataframe/Type| {
            super<R|kotlin/Any|>()
        }

        public final val name: R|kotlin/String| = R|<local>/name|
            public get(): R|kotlin/String|

        public final val vararg: R|kotlin/Boolean| = R|<local>/vararg|
            public get(): R|kotlin/Boolean|

        public final operator fun component1(): R|kotlin/String|

        public final operator fun component2(): R|kotlin/Boolean|

        public final fun copy(name: R|kotlin/String| = this@R|org/jetbrains/kotlinx/dataframe/Type|.R|org/jetbrains/kotlinx/dataframe/Type.name|, vararg: R|kotlin/Boolean| = this@R|org/jetbrains/kotlinx/dataframe/Type|.R|org/jetbrains/kotlinx/dataframe/Type.vararg|): R|org/jetbrains/kotlinx/dataframe/Type|

    }
    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public final class Parameter : R|org/jetbrains/kotlinx/dataframe/api/DataRowSchema| {
        public constructor(name: R|kotlin/String|, returnType: R|org/jetbrains/kotlinx/dataframe/Type|, defaultValue: R|kotlin/String?|): R|org/jetbrains/kotlinx/dataframe/Parameter| {
            super<R|kotlin/Any|>()
        }

        public final val name: R|kotlin/String| = R|<local>/name|
            public get(): R|kotlin/String|

        public final val returnType: R|org/jetbrains/kotlinx/dataframe/Type| = R|<local>/returnType|
            public get(): R|org/jetbrains/kotlinx/dataframe/Type|

        public final val defaultValue: R|kotlin/String?| = R|<local>/defaultValue|
            public get(): R|kotlin/String?|

    }
    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public final class Function : R|org/jetbrains/kotlinx/dataframe/api/DataRowSchema| {
        public constructor(receiverType: R|kotlin/String|, function: R|kotlin/String|, functionReturnType: R|org/jetbrains/kotlinx/dataframe/Type|, parameters: R|kotlin/collections/List<org/jetbrains/kotlinx/dataframe/Parameter>|): R|org/jetbrains/kotlinx/dataframe/Function| {
            super<R|kotlin/Any|>()
        }

        public final val receiverType: R|kotlin/String| = R|<local>/receiverType|
            public get(): R|kotlin/String|

        public final val function: R|kotlin/String| = R|<local>/function|
            public get(): R|kotlin/String|

        public final val functionReturnType: R|org/jetbrains/kotlinx/dataframe/Type| = R|<local>/functionReturnType|
            public get(): R|org/jetbrains/kotlinx/dataframe/Type|

        public final val parameters: R|kotlin/collections/List<org/jetbrains/kotlinx/dataframe/Parameter>| = R|<local>/parameters|
            public get(): R|kotlin/collections/List<org/jetbrains/kotlinx/dataframe/Parameter>|

    }
    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public final class RefinedFunction : R|org/jetbrains/kotlinx/dataframe/api/DataRowSchema| {
        public constructor(receiverType: R|kotlin/String|, function: R|kotlin/String|, functionReturnType: R|org/jetbrains/kotlinx/dataframe/Type|, parameters: R|kotlin/collections/List<org/jetbrains/kotlinx/dataframe/Parameter>|, startingSchema: R|org/jetbrains/kotlinx/dataframe/Parameter|): R|org/jetbrains/kotlinx/dataframe/RefinedFunction| {
            super<R|kotlin/Any|>()
        }

        public final val receiverType: R|kotlin/String| = R|<local>/receiverType|
            public get(): R|kotlin/String|

        public final val function: R|kotlin/String| = R|<local>/function|
            public get(): R|kotlin/String|

        public final val functionReturnType: R|org/jetbrains/kotlinx/dataframe/Type| = R|<local>/functionReturnType|
            public get(): R|org/jetbrains/kotlinx/dataframe/Type|

        public final val parameters: R|kotlin/collections/List<org/jetbrains/kotlinx/dataframe/Parameter>| = R|<local>/parameters|
            public get(): R|kotlin/collections/List<org/jetbrains/kotlinx/dataframe/Parameter>|

        public final val startingSchema: R|org/jetbrains/kotlinx/dataframe/Parameter| = R|<local>/startingSchema|
            public get(): R|org/jetbrains/kotlinx/dataframe/Parameter|

    }
    public final fun R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Function>|.refine(bridges: R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Bridge>|): R|kotlin/Unit| {
        lval functions: R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Function>| = this@R|org/jetbrains/kotlinx/dataframe/refine|
        lval df1: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Function_30>| = R|<local>/functions|.R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Function>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Function_30>|>(<L> = fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Function>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Function_30>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class Function_30I : R|kotlin/Any| {
                public abstract val lens: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val functionReturnType: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/FunctionReturnType_501>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/FunctionReturnType_501>|

                public abstract val parameters: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Parameters_501>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Parameters_501>|

                public abstract val function: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val converter: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val supported: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                public abstract val receiverType: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val approximation: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val type: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Type_501>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Type_501>|

                public constructor(): R|<local>/Function_30I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Function_30I>|.lens: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Function_30I>|.lens: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Function_30I>|.functionReturnType: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/FunctionReturnType_501>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/FunctionReturnType_501>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Function_30I>|.functionReturnType: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/FunctionReturnType_501>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/FunctionReturnType_501>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Function_30I>|.parameters: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Parameters_501>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Parameters_501>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Function_30I>|.parameters: R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Parameters_501>>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Parameters_501>>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Function_30I>|.function: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Function_30I>|.function: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Function_30I>|.converter: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Function_30I>|.converter: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Function_30I>|.supported: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Function_30I>|.supported: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Function_30I>|.receiverType: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Function_30I>|.receiverType: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Function_30I>|.approximation: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Function_30I>|.approximation: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Function_30I>|.type: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Type_501>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Type_501>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Function_30I>|.type: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/Type_501>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/Type_501>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class Type_501 : R|kotlin/Any| {
                public abstract val vararg: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                public constructor(): R|<local>/Type_501|

            }

            local final class Scope4 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Type_501>|.vararg: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Type_501>|.vararg: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|

                public constructor(): R|<local>/Scope4|

            }

            local abstract class Parameters_501 : R|kotlin/Any| {
                public abstract val returnType: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/ReturnType_501>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/ReturnType_501>|

                public abstract val defaultValue: R|kotlin/String?|
                    public get(): R|kotlin/String?|

                public abstract val name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public constructor(): R|<local>/Parameters_501|

            }

            local final class Scope2 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Parameters_501>|.returnType: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/ReturnType_501>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/ReturnType_501>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Parameters_501>|.returnType: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/ReturnType_501>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/ReturnType_501>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Parameters_501>|.defaultValue: R|kotlin/String?|
                    public get(): R|kotlin/String?|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Parameters_501>|.defaultValue: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String?>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String?>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Parameters_501>|.name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Parameters_501>|.name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public constructor(): R|<local>/Scope2|

            }

            local abstract class ReturnType_501 : R|kotlin/Any| {
                public abstract val vararg: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                public abstract val name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public constructor(): R|<local>/ReturnType_501|

            }

            local final class Scope3 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/ReturnType_501>|.vararg: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/ReturnType_501>|.vararg: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/ReturnType_501>|.name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/ReturnType_501>|.name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public constructor(): R|<local>/Scope3|

            }

            local abstract class FunctionReturnType_501 : R|kotlin/Any| {
                public abstract val vararg: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                public abstract val name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public constructor(): R|<local>/FunctionReturnType_501|

            }

            local final class Scope1 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/FunctionReturnType_501>|.vararg: R|kotlin/Boolean|
                    public get(): R|kotlin/Boolean|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/FunctionReturnType_501>|.vararg: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/FunctionReturnType_501>|.name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/FunctionReturnType_501>|.name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public constructor(): R|<local>/Scope1|

            }

            local abstract class Function_30 : R|<local>/Function_30I| {
                public abstract var scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|
                    public set(value: R|<local>/Scope0|): R|kotlin/Unit|

                public abstract var scope4: R|<local>/Scope4|
                    public get(): R|<local>/Scope4|
                    public set(value: R|<local>/Scope4|): R|kotlin/Unit|

                public abstract var scope3: R|<local>/Scope3|
                    public get(): R|<local>/Scope3|
                    public set(value: R|<local>/Scope3|): R|kotlin/Unit|

                public abstract var scope2: R|<local>/Scope2|
                    public get(): R|<local>/Scope2|
                    public set(value: R|<local>/Scope2|): R|kotlin/Unit|

                public abstract var scope1: R|<local>/Scope1|
                    public get(): R|<local>/Scope1|
                    public set(value: R|<local>/Scope1|): R|kotlin/Unit|

                public constructor(): R|<local>/Function_30|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/join|<R|org/jetbrains/kotlinx/dataframe/Function|, R|org/jetbrains/kotlinx/dataframe/Bridge|>(R|<local>/bridges|, <L> = join@fun R|org/jetbrains/kotlinx/dataframe/api/JoinDsl<org/jetbrains/kotlinx/dataframe/Function, org/jetbrains/kotlinx/dataframe/Bridge>|.<anonymous>(it: R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Function>|): R|org/jetbrains/kotlinx/dataframe/columns/ColumnsResolver<*>| <inline=NoInline>  {
                ^ (this@R|special/anonymous|, R|<local>/functions|.R|org/jetbrains/kotlinx/dataframe/functionReturnType|.R|org/jetbrains/kotlinx/dataframe/name|).R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/api/JoinDsl.match: R|org/jetbrains/kotlinx/dataframe/api/ColumnMatch<C>|>|<R|kotlin/String|>(this@R|special/anonymous|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/api/JoinDsl.right: R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Bridge>|>|.R|org/jetbrains/kotlinx/dataframe/type|.R|org/jetbrains/kotlinx/dataframe/name|)
            }
            )
        }
        )
        lval col: R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<*>>| = (this@R|org/jetbrains/kotlinx/dataframe/refine|, R|<local>/df1|).R|<local>/Scope0.parameters|
    }
    public final fun box(): R|kotlin/String| {
        ^box String(OK)
    }
FILE: __GENERATED DECLARATIONS__.kt
    package org.jetbrains.kotlinx.dataframe

    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Bridge>|.type: R|org/jetbrains/kotlinx/dataframe/Type|
        public get(): R|org/jetbrains/kotlinx/dataframe/Type|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Bridge>|.type: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<org/jetbrains/kotlinx/dataframe/Type>|
        public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<org/jetbrains/kotlinx/dataframe/Type>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Bridge>|.approximation: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Bridge>|.approximation: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Bridge>|.converter: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Bridge>|.converter: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Bridge>|.lens: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Bridge>|.lens: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Bridge>|.supported: R|kotlin/Boolean|
        public get(): R|kotlin/Boolean|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Bridge>|.supported: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Type>|.name: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Type>|.name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Parameter>|.name: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Parameter>|.name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Type>|.vararg: R|kotlin/Boolean|
        public get(): R|kotlin/Boolean|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Type>|.vararg: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Boolean>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Parameter>|.returnType: R|org/jetbrains/kotlinx/dataframe/Type|
        public get(): R|org/jetbrains/kotlinx/dataframe/Type|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Parameter>|.returnType: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<org/jetbrains/kotlinx/dataframe/Type>|
        public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<org/jetbrains/kotlinx/dataframe/Type>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Parameter>|.defaultValue: R|kotlin/String?|
        public get(): R|kotlin/String?|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Parameter>|.defaultValue: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String?>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String?>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Function>|.receiverType: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Function>|.receiverType: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/RefinedFunction>|.receiverType: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/RefinedFunction>|.receiverType: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Function>|.function: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Function>|.function: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/RefinedFunction>|.function: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/RefinedFunction>|.function: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Function>|.functionReturnType: R|org/jetbrains/kotlinx/dataframe/Type|
        public get(): R|org/jetbrains/kotlinx/dataframe/Type|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Function>|.functionReturnType: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<org/jetbrains/kotlinx/dataframe/Type>|
        public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<org/jetbrains/kotlinx/dataframe/Type>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/RefinedFunction>|.functionReturnType: R|org/jetbrains/kotlinx/dataframe/Type|
        public get(): R|org/jetbrains/kotlinx/dataframe/Type|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/RefinedFunction>|.functionReturnType: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<org/jetbrains/kotlinx/dataframe/Type>|
        public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<org/jetbrains/kotlinx/dataframe/Type>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/Function>|.parameters: R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Parameter>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Parameter>|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/Function>|.parameters: R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Parameter>>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Parameter>>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/RefinedFunction>|.parameters: R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Parameter>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Parameter>|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/RefinedFunction>|.parameters: R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Parameter>>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<org/jetbrains/kotlinx/dataframe/Parameter>>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<org/jetbrains/kotlinx/dataframe/RefinedFunction>|.startingSchema: R|org/jetbrains/kotlinx/dataframe/Parameter|
        public get(): R|org/jetbrains/kotlinx/dataframe/Parameter|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<org/jetbrains/kotlinx/dataframe/RefinedFunction>|.startingSchema: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<org/jetbrains/kotlinx/dataframe/Parameter>|
        public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<org/jetbrains/kotlinx/dataframe/Parameter>|
