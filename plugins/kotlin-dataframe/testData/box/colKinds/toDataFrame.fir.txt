FILE: toDataFrame.kt
    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public final data class Record : R|kotlin/Any|, R|org/jetbrains/kotlinx/dataframe/api/DataRowSchema| {
        public constructor(str: R|kotlin/String|): R|Record| {
            super<R|kotlin/Any|>()
        }

        public final val str: R|kotlin/String| = R|<local>/str|
            public get(): R|kotlin/String|

        public final operator fun component1(): R|kotlin/String|

        public final fun copy(str: R|kotlin/String| = this@R|/Record|.R|/Record.str|): R|Record|

    }
    public final class A : R|kotlin/Any| {
        public constructor(): R|A| {
            super<R|kotlin/Any|>()
        }

    }
    public final fun box(): R|kotlin/String| {
        lval df: R|org/jetbrains/kotlinx/dataframe/DataFrame<Record>| = R|org/jetbrains/kotlinx/dataframe/api/dataFrameOf|<R|Record|>(vararg(R|/Record.Record|(String(abc))))
        lval df1: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/A_28>| = R|kotlin/collections/listOf|<R|A|>(R|/A.A|()).R|kotlin/let|<R|kotlin/collections/List<A>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/A_28>|>(<L> = fun <anonymous>(it: R|kotlin/collections/List<A>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/A_28>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class A_28I : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val dataRow: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataRow_851>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataRow_851>|

                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(1)) public abstract val dataFrame: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrame_851>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrame_851>|

                public constructor(): R|<local>/A_28I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/A_28I>|.dataRow: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataRow_851>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataRow_851>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/A_28I>|.dataRow: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/DataRow_851>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/DataRow_851>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/A_28I>|.dataFrame: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrame_851>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrame_851>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/A_28I>|.dataFrame: R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrame_851>>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrame_851>>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class DataFrame_851 : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val str: R|kotlin/String|
                    public get(): R|kotlin/String|

                public constructor(): R|<local>/DataFrame_851|

            }

            local final class Scope2 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrame_851>|.str: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrame_851>|.str: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public constructor(): R|<local>/Scope2|

            }

            local abstract class DataRow_851 : R|kotlin/Any| {
                @R|org/jetbrains/kotlinx/dataframe/annotations/Order|(order = Int(0)) public abstract val str: R|kotlin/String|
                    public get(): R|kotlin/String|

                public constructor(): R|<local>/DataRow_851|

            }

            local final class Scope1 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataRow_851>|.str: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataRow_851>|.str: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public constructor(): R|<local>/Scope1|

            }

            local abstract class A_28 : R|<local>/A_28I| {
                public abstract var scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|
                    public set(value: R|<local>/Scope0|): R|kotlin/Unit|

                public abstract var scope2: R|<local>/Scope2|
                    public get(): R|<local>/Scope2|
                    public set(value: R|<local>/Scope2|): R|kotlin/Unit|

                public abstract var scope1: R|<local>/Scope1|
                    public get(): R|<local>/Scope1|
                    public set(value: R|<local>/Scope1|): R|kotlin/Unit|

                public constructor(): R|<local>/A_28|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/toDataFrame|<R|A|>(<L> = toDataFrame@fun R|org/jetbrains/kotlinx/dataframe/api/CreateDataFrameDsl<A>|.<anonymous>(): R|kotlin/Unit| <inline=NoInline>  {
                (this@R|special/anonymous|, String(dataRow)).R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/api/CreateDataFrameDsl.from: R|kotlin/Unit|>|<R|org/jetbrains/kotlinx/dataframe/DataRow<Record>|>(from@fun <anonymous>(it: R|A|): R|org/jetbrains/kotlinx/dataframe/DataRow<Record>| <inline=NoInline>  {
                    ^ R|<local>/df|.R|org/jetbrains/kotlinx/dataframe/api/first|<R|Record|>()
                }
                )
                (this@R|special/anonymous|, String(dataFrame)).R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/api/CreateDataFrameDsl.from: R|kotlin/Unit|>|<R|org/jetbrains/kotlinx/dataframe/DataFrame<Record>|>(from@fun <anonymous>(it: R|A|): R|org/jetbrains/kotlinx/dataframe/DataFrame<Record>| <inline=NoInline>  {
                    ^ R|<local>/df|
                }
                )
            }
            )
        }
        )
        lval a: R|kotlin/String| = (this@R|/box|, (this@R|/box|, R|<local>/df1|).R|<local>/Scope0.dataRow|).R|<local>/Scope1.str|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataColumn.get: R|kotlin/String|>|(Int(0))
        lval b: R|kotlin/String| = (this@R|/box|, (this@R|/box|, R|<local>/df1|).R|<local>/Scope0.dataFrame|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataColumn.get: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/DataFrame_851>|>|(Int(0))).R|<local>/Scope2.str|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataColumn.get: R|kotlin/String|>|(Int(0))
        ^box String(OK)
    }
FILE: __GENERATED DECLARATIONS__.kt
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<Record>|.str: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<Record>|.str: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
