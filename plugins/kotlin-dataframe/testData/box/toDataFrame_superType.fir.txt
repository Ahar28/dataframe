FILE: toDataFrame_superType.kt
    public abstract interface SupertypeProperty : R|kotlin/Any| {
        public abstract val i: R|kotlin/Int|
            public get(): R|kotlin/Int|

    }
    public abstract interface MyInterface : R|SupertypeProperty| {
        public abstract val a: R|kotlin/Int|
            public get(): R|kotlin/Int|

    }
    public final class MyImpl : R|MyInterface| {
        public constructor(i: R|kotlin/Int|, a: R|kotlin/Int|): R|MyImpl| {
            super<R|kotlin/Any|>()
        }

        public open override val i: R|kotlin/Int| = R|<local>/i|
            public get(): R|kotlin/Int|

        public open override val a: R|kotlin/Int| = R|<local>/a|
            public get(): R|kotlin/Int|

    }
    public final fun test(list: R|kotlin/collections/List<MyInterface>|): R|kotlin/Unit| {
        lval df: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenMyInterface_1203452584>| = R|<local>/list|.R|kotlin/let|<R|kotlin/collections/List<MyInterface>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenMyInterface_1203452584>|>(<L> = fun <anonymous>(it: R|kotlin/collections/List<MyInterface>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenMyInterface_1203452584>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class TokenMyInterface_1203452584I : R|kotlin/Any| {
                public abstract val i: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public abstract val a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public constructor(): R|<local>/TokenMyInterface_1203452584I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/TokenMyInterface_1203452584I>|.i: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/TokenMyInterface_1203452584I>|.i: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/TokenMyInterface_1203452584I>|.a: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/TokenMyInterface_1203452584I>|.a: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class TokenMyInterface_1203452584 : R|<local>/TokenMyInterface_1203452584I| {
                public abstract var scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|
                    public set(value: R|<local>/Scope0|): R|kotlin/Unit|

                public constructor(): R|<local>/TokenMyInterface_1203452584|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/toDataFrame|<R|MyInterface|>()
        }
        )
        R|<local>/df|.R|org/jetbrains/kotlinx/dataframe/api/schema|().R|org/jetbrains/kotlinx/dataframe/api/print|()
        (this@R|/test|, R|<local>/df|).R|<local>/Scope0.i|
        (this@R|/test|, R|<local>/df|).R|<local>/Scope0.a|
    }
    public final fun box(): R|kotlin/String| {
        R|/test|(R|kotlin/collections/listOf|<R|MyImpl|>(R|/MyImpl.MyImpl|(Int(1), Int(2))))
        ^box String(OK)
    }
