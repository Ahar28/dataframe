FILE fqName:<root> fileName:/localTypeExposure.kt
  PROPERTY name:df1 visibility:public modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:df1 type:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun add <R, T> (name: kotlin.String, infer: org.jetbrains.kotlinx.dataframe.api.Infer, expression: @[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, R of org.jetbrains.kotlinx.dataframe.api.add>): org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.add> declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> origin=null
          <R>: kotlin.Int
          <T>: kotlin.Any?
          $receiver: CALL 'public final fun invoke (vararg values: kotlin.Any?): org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
            $this: CALL 'public final fun dataFrameOf (vararg header: kotlin.String): org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder origin=null
              header: VARARG type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String
                CONST String type=kotlin.String value="a"
            values: VARARG type=kotlin.Array<out kotlin.Any?> varargElementType=kotlin.Any?
              CONST Int type=kotlin.Int value=1
          name: CONST String type=kotlin.String value="b"
          expression: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, kotlin.Int> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, it:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>) returnType:kotlin.Int
              $receiver: VALUE_PARAMETER name:$this$add type:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
              VALUE_PARAMETER name:it index:0 type:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>): kotlin.Int declared in <root>.df1'
                  CONST Int type=kotlin.Int value=2
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-df1> visibility:public modality:FINAL <> () returnType:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?>
      correspondingProperty: PROPERTY name:df1 visibility:public modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='public final fun <get-df1> (): org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:df1 type:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> visibility:private [final,static]' type=org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> origin=null
  PROPERTY name:df2 visibility:internal modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:df2 type:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun add <R, T> (name: kotlin.String, infer: org.jetbrains.kotlinx.dataframe.api.Infer, expression: @[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, R of org.jetbrains.kotlinx.dataframe.api.add>): org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.add> declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> origin=null
          <R>: kotlin.Int
          <T>: kotlin.Any?
          $receiver: CALL 'public final fun invoke (vararg values: kotlin.Any?): org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
            $this: CALL 'public final fun dataFrameOf (vararg header: kotlin.String): org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder origin=null
              header: VARARG type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String
                CONST String type=kotlin.String value="a"
            values: VARARG type=kotlin.Array<out kotlin.Any?> varargElementType=kotlin.Any?
              CONST Int type=kotlin.Int value=1
          name: CONST String type=kotlin.String value="b"
          expression: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, kotlin.Int> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, it:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>) returnType:kotlin.Int
              $receiver: VALUE_PARAMETER name:$this$add type:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
              VALUE_PARAMETER name:it index:0 type:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
              BLOCK_BODY
                RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>): kotlin.Int declared in <root>.df2'
                  CONST Int type=kotlin.Int value=2
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-df2> visibility:internal modality:FINAL <> () returnType:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?>
      correspondingProperty: PROPERTY name:df2 visibility:internal modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='internal final fun <get-df2> (): org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:df2 type:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> visibility:private [final,static]' type=org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> origin=null
  PROPERTY name:df3 visibility:private modality:FINAL [val]
    FIELD PROPERTY_BACKING_FIELD name:df3 type:org.jetbrains.kotlinx.dataframe.DataFrame<<root>.df3.<anonymous>.Add_78> visibility:private [final,static]
      EXPRESSION_BODY
        CALL 'public final fun let <T, R> (block: kotlin.Function1<T of kotlin.let, R of kotlin.let>): R of kotlin.let declared in kotlin' type=org.jetbrains.kotlinx.dataframe.DataFrame<<root>.df3.<anonymous>.Add_78> origin=null
          <T>: org.jetbrains.kotlinx.dataframe.DataFrame<*>
          <R>: org.jetbrains.kotlinx.dataframe.DataFrame<<root>.df3.<anonymous>.Add_78>
          $receiver: CALL 'public final fun invoke (vararg values: kotlin.Any?): org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
            $this: CALL 'public final fun dataFrameOf (vararg header: kotlin.String): org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder origin=null
              header: VARARG type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String
                CONST String type=kotlin.String value="a"
            values: VARARG type=kotlin.Array<out kotlin.Any?> varargElementType=kotlin.Any?
              CONST Int type=kotlin.Int value=1
          block: FUN_EXPR type=kotlin.Function1<org.jetbrains.kotlinx.dataframe.DataFrame<*>, org.jetbrains.kotlinx.dataframe.DataFrame<<root>.df3.<anonymous>.Add_78>> origin=LAMBDA
            FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:org.jetbrains.kotlinx.dataframe.DataFrame<*>) returnType:org.jetbrains.kotlinx.dataframe.DataFrame<<root>.df3.<anonymous>.Add_78>
              VALUE_PARAMETER name:it index:0 type:org.jetbrains.kotlinx.dataframe.DataFrame<*>
              BLOCK_BODY
                CLASS CLASS name:Add_78I modality:ABSTRACT visibility:local superTypes:[kotlin.Any]
                  $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.df3.<anonymous>.Add_78I
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] visibility:public <> () returnType:<root>.df3.<anonymous>.Add_78I [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Add_78I modality:ABSTRACT visibility:local superTypes:[kotlin.Any]'
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                    $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                    VALUE_PARAMETER name:other index:0 type:kotlin.Any?
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in kotlin.Any
                    $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
                    overridden:
                      public open fun toString (): kotlin.String declared in kotlin.Any
                    $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                  PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.TokenGenerator.Key] name:b visibility:public modality:ABSTRACT [val]
                    annotations:
                      Order(order = 0)
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-b> visibility:public modality:ABSTRACT <> ($this:<root>.df3.<anonymous>.Add_78I) returnType:kotlin.Int
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.TokenGenerator.Key] name:b visibility:public modality:ABSTRACT [val]
                      $this: VALUE_PARAMETER name:<this> type:<root>.df3.<anonymous>.Add_78I
                CLASS CLASS name:Scope0 modality:FINAL visibility:local superTypes:[kotlin.Any]
                  $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.df3.<anonymous>.Scope0
                  PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:b visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Int visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:<get-b> visibility:public modality:FINAL <> ($this:<root>.df3.<anonymous>.Scope0, $receiver:org.jetbrains.kotlinx.dataframe.DataRow<<root>.df3.<anonymous>.Add_78I>) returnType:kotlin.Int
                      annotations:
                        JvmName(name = "Add_78I_b")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:b visibility:public modality:FINAL [val]
                      $this: VALUE_PARAMETER name:<this> type:<root>.df3.<anonymous>.Scope0
                      $receiver: VALUE_PARAMETER name:<this> type:org.jetbrains.kotlinx.dataframe.DataRow<<root>.df3.<anonymous>.Add_78I>
                      BLOCK_BODY
                        RETURN type=kotlin.Int from='public final fun <get-b> (): kotlin.Int declared in <root>.df3.<anonymous>.Scope0'
                          TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                            CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                              $this: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<<root>.df3.<anonymous>.Add_78I> declared in <root>.df3.<anonymous>.Scope0.<get-b>' type=org.jetbrains.kotlinx.dataframe.DataRow<<root>.df3.<anonymous>.Add_78I> origin=null
                              name: CONST String type=kotlin.String value="b"
                  PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:b visibility:public modality:FINAL [val]
                    FIELD PROPERTY_BACKING_FIELD name:b type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> visibility:private [final]
                    FUN GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:<get-b> visibility:public modality:FINAL <> ($this:<root>.df3.<anonymous>.Scope0, $receiver:org.jetbrains.kotlinx.dataframe.ColumnsContainer<<root>.df3.<anonymous>.Add_78I>) returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int>
                      annotations:
                        JvmName(name = "Add_78I_b")
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:b visibility:public modality:FINAL [val]
                      $this: VALUE_PARAMETER name:<this> type:<root>.df3.<anonymous>.Scope0
                      $receiver: VALUE_PARAMETER name:<this> type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<<root>.df3.<anonymous>.Add_78I>
                      BLOCK_BODY
                        RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> from='public final fun <get-b> (): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> declared in <root>.df3.<anonymous>.Scope0'
                          TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int>
                            CALL 'public open fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsContainer' type=kotlin.Any? origin=null
                              $this: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<<root>.df3.<anonymous>.Add_78I> declared in <root>.df3.<anonymous>.Scope0.<get-b>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<<root>.df3.<anonymous>.Add_78I> origin=null
                              columnName: CONST String type=kotlin.String value="b"
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] visibility:public <> () returnType:<root>.df3.<anonymous>.Scope0 [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Scope0 modality:FINAL visibility:local superTypes:[kotlin.Any]'
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                    $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                    VALUE_PARAMETER name:other index:0 type:kotlin.Any?
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in kotlin.Any
                    $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
                    overridden:
                      public open fun toString (): kotlin.String declared in kotlin.Any
                    $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                CLASS CLASS name:Add_78 modality:ABSTRACT visibility:local superTypes:[<root>.df3.<anonymous>.Add_78I]
                  $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.df3.<anonymous>.Add_78
                  CONSTRUCTOR GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] visibility:public <> () returnType:<root>.df3.<anonymous>.Add_78 [primary]
                    BLOCK_BODY
                      DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.df3.<anonymous>.Add_78I'
                      INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Add_78 modality:ABSTRACT visibility:local superTypes:[<root>.df3.<anonymous>.Add_78I]'
                  FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
                    overridden:
                      public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.df3.<anonymous>.Add_78I
                    $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                    VALUE_PARAMETER name:other index:0 type:kotlin.Any?
                  FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
                    overridden:
                      public open fun hashCode (): kotlin.Int declared in <root>.df3.<anonymous>.Add_78I
                    $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                  FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
                    overridden:
                      public open fun toString (): kotlin.String declared in <root>.df3.<anonymous>.Add_78I
                    $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                  PROPERTY FAKE_OVERRIDE name:b visibility:public modality:ABSTRACT [fake_override,val]
                    annotations:
                      Order(order = 0)
                    overridden:
                      public abstract b: kotlin.Int declared in <root>.df3.<anonymous>.Add_78I
                    FUN FAKE_OVERRIDE name:<get-b> visibility:public modality:ABSTRACT <> ($this:<root>.df3.<anonymous>.Add_78I) returnType:kotlin.Int [fake_override]
                      correspondingProperty: PROPERTY FAKE_OVERRIDE name:b visibility:public modality:ABSTRACT [fake_override,val]
                      overridden:
                        public abstract fun <get-b> (): kotlin.Int declared in <root>.df3.<anonymous>.Add_78I
                      $this: VALUE_PARAMETER name:<this> type:<root>.df3.<anonymous>.Add_78I
                  PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.TokenGenerator.Key] name:scope0 visibility:public modality:ABSTRACT [var]
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-scope0> visibility:public modality:ABSTRACT <> ($this:<root>.df3.<anonymous>.Add_78) returnType:<root>.df3.<anonymous>.Scope0
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.TokenGenerator.Key] name:scope0 visibility:public modality:ABSTRACT [var]
                      $this: VALUE_PARAMETER name:<this> type:<root>.df3.<anonymous>.Add_78
                    FUN DEFAULT_PROPERTY_ACCESSOR name:<set-scope0> visibility:public modality:ABSTRACT <> ($this:<root>.df3.<anonymous>.Add_78, <set-?>:<root>.df3.<anonymous>.Scope0) returnType:kotlin.Unit
                      correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.TokenGenerator.Key] name:scope0 visibility:public modality:ABSTRACT [var]
                      $this: VALUE_PARAMETER name:<this> type:<root>.df3.<anonymous>.Add_78
                      VALUE_PARAMETER name:<set-?> index:0 type:<root>.df3.<anonymous>.Scope0
                RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: org.jetbrains.kotlinx.dataframe.DataFrame<*>): org.jetbrains.kotlinx.dataframe.DataFrame<<root>.df3.<anonymous>.Add_78> declared in <root>.df3'
                  CALL 'public final fun add <R, T> (name: kotlin.String, infer: org.jetbrains.kotlinx.dataframe.api.Infer, expression: @[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, R of org.jetbrains.kotlinx.dataframe.api.add>): org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.add> declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.DataFrame<<root>.df3.<anonymous>.Add_78> origin=null
                    <R>: kotlin.Int
                    <T>: kotlin.Any?
                    $receiver: GET_VAR 'it: org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in <root>.df3.<anonymous>' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
                    name: CONST String type=kotlin.String value="b"
                    expression: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, kotlin.Int> origin=LAMBDA
                      FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, it:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>) returnType:kotlin.Int
                        $receiver: VALUE_PARAMETER name:$this$add type:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
                        VALUE_PARAMETER name:it index:0 type:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
                        BLOCK_BODY
                          RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>): kotlin.Int declared in <root>.df3.<anonymous>'
                            CONST Int type=kotlin.Int value=2
    FUN DEFAULT_PROPERTY_ACCESSOR name:<get-df3> visibility:private modality:FINAL <> () returnType:org.jetbrains.kotlinx.dataframe.DataFrame<<root>.df3.<anonymous>.Add_78>
      correspondingProperty: PROPERTY name:df3 visibility:private modality:FINAL [val]
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='private final fun <get-df3> (): org.jetbrains.kotlinx.dataframe.DataFrame<<root>.df3.<anonymous>.Add_78> declared in <root>'
          GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:df3 type:org.jetbrains.kotlinx.dataframe.DataFrame<<root>.df3.<anonymous>.Add_78> visibility:private [final,static]' type=org.jetbrains.kotlinx.dataframe.DataFrame<<root>.df3.<anonymous>.Add_78> origin=null
  CLASS CLASS name:Container modality:FINAL visibility:public superTypes:[kotlin.Any]
    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Container
    PROPERTY name:df1 visibility:public modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:df1 type:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun add <R, T> (name: kotlin.String, infer: org.jetbrains.kotlinx.dataframe.api.Infer, expression: @[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, R of org.jetbrains.kotlinx.dataframe.api.add>): org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.add> declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> origin=null
            <R>: kotlin.Int
            <T>: kotlin.Any?
            $receiver: CALL 'public final fun invoke (vararg values: kotlin.Any?): org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
              $this: CALL 'public final fun dataFrameOf (vararg header: kotlin.String): org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder origin=null
                header: VARARG type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String
                  CONST String type=kotlin.String value="a"
              values: VARARG type=kotlin.Array<out kotlin.Any?> varargElementType=kotlin.Any?
                CONST Int type=kotlin.Int value=1
            name: CONST String type=kotlin.String value="b"
            expression: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, kotlin.Int> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, it:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>) returnType:kotlin.Int
                $receiver: VALUE_PARAMETER name:$this$add type:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
                VALUE_PARAMETER name:it index:0 type:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>): kotlin.Int declared in <root>.Container.df1'
                    CONST Int type=kotlin.Int value=2
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-df1> visibility:public modality:FINAL <> ($this:<root>.Container) returnType:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?>
        correspondingProperty: PROPERTY name:df1 visibility:public modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Container
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='public final fun <get-df1> (): org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> declared in <root>.Container'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:df1 type:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> visibility:private [final]' type=org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> origin=null
              receiver: GET_VAR '<this>: <root>.Container declared in <root>.Container.<get-df1>' type=<root>.Container origin=null
    PROPERTY name:df2 visibility:internal modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:df2 type:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun add <R, T> (name: kotlin.String, infer: org.jetbrains.kotlinx.dataframe.api.Infer, expression: @[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, R of org.jetbrains.kotlinx.dataframe.api.add>): org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.add> declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> origin=null
            <R>: kotlin.Int
            <T>: kotlin.Any?
            $receiver: CALL 'public final fun invoke (vararg values: kotlin.Any?): org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
              $this: CALL 'public final fun dataFrameOf (vararg header: kotlin.String): org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder origin=null
                header: VARARG type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String
                  CONST String type=kotlin.String value="a"
              values: VARARG type=kotlin.Array<out kotlin.Any?> varargElementType=kotlin.Any?
                CONST Int type=kotlin.Int value=1
            name: CONST String type=kotlin.String value="b"
            expression: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, kotlin.Int> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, it:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>) returnType:kotlin.Int
                $receiver: VALUE_PARAMETER name:$this$add type:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
                VALUE_PARAMETER name:it index:0 type:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>): kotlin.Int declared in <root>.Container.df2'
                    CONST Int type=kotlin.Int value=2
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-df2> visibility:internal modality:FINAL <> ($this:<root>.Container) returnType:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?>
        correspondingProperty: PROPERTY name:df2 visibility:internal modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Container
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='internal final fun <get-df2> (): org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> declared in <root>.Container'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:df2 type:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> visibility:private [final]' type=org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> origin=null
              receiver: GET_VAR '<this>: <root>.Container declared in <root>.Container.<get-df2>' type=<root>.Container origin=null
    PROPERTY name:df3 visibility:protected modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:df3 type:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun add <R, T> (name: kotlin.String, infer: org.jetbrains.kotlinx.dataframe.api.Infer, expression: @[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, R of org.jetbrains.kotlinx.dataframe.api.add>): org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.add> declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> origin=null
            <R>: kotlin.Int
            <T>: kotlin.Any?
            $receiver: CALL 'public final fun invoke (vararg values: kotlin.Any?): org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
              $this: CALL 'public final fun dataFrameOf (vararg header: kotlin.String): org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder origin=null
                header: VARARG type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String
                  CONST String type=kotlin.String value="a"
              values: VARARG type=kotlin.Array<out kotlin.Any?> varargElementType=kotlin.Any?
                CONST Int type=kotlin.Int value=1
            name: CONST String type=kotlin.String value="b"
            expression: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, kotlin.Int> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, it:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>) returnType:kotlin.Int
                $receiver: VALUE_PARAMETER name:$this$add type:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
                VALUE_PARAMETER name:it index:0 type:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
                BLOCK_BODY
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>): kotlin.Int declared in <root>.Container.df3'
                    CONST Int type=kotlin.Int value=2
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-df3> visibility:protected modality:FINAL <> ($this:<root>.Container) returnType:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?>
        correspondingProperty: PROPERTY name:df3 visibility:protected modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Container
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='protected final fun <get-df3> (): org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> declared in <root>.Container'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:df3 type:org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> visibility:private [final]' type=org.jetbrains.kotlinx.dataframe.DataFrame<kotlin.Any?> origin=null
              receiver: GET_VAR '<this>: <root>.Container declared in <root>.Container.<get-df3>' type=<root>.Container origin=null
    PROPERTY name:df4 visibility:private modality:FINAL [val]
      FIELD PROPERTY_BACKING_FIELD name:df4 type:org.jetbrains.kotlinx.dataframe.DataFrame<<root>.Container.df4.<anonymous>.Add_78> visibility:private [final]
        EXPRESSION_BODY
          CALL 'public final fun let <T, R> (block: kotlin.Function1<T of kotlin.let, R of kotlin.let>): R of kotlin.let declared in kotlin' type=org.jetbrains.kotlinx.dataframe.DataFrame<<root>.Container.df4.<anonymous>.Add_78> origin=null
            <T>: org.jetbrains.kotlinx.dataframe.DataFrame<*>
            <R>: org.jetbrains.kotlinx.dataframe.DataFrame<<root>.Container.df4.<anonymous>.Add_78>
            $receiver: CALL 'public final fun invoke (vararg values: kotlin.Any?): org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
              $this: CALL 'public final fun dataFrameOf (vararg header: kotlin.String): org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.api.DataFrameBuilder origin=null
                header: VARARG type=kotlin.Array<out kotlin.String> varargElementType=kotlin.String
                  CONST String type=kotlin.String value="a"
              values: VARARG type=kotlin.Array<out kotlin.Any?> varargElementType=kotlin.Any?
                CONST Int type=kotlin.Int value=1
            block: FUN_EXPR type=kotlin.Function1<org.jetbrains.kotlinx.dataframe.DataFrame<*>, org.jetbrains.kotlinx.dataframe.DataFrame<<root>.Container.df4.<anonymous>.Add_78>> origin=LAMBDA
              FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> (it:org.jetbrains.kotlinx.dataframe.DataFrame<*>) returnType:org.jetbrains.kotlinx.dataframe.DataFrame<<root>.Container.df4.<anonymous>.Add_78>
                VALUE_PARAMETER name:it index:0 type:org.jetbrains.kotlinx.dataframe.DataFrame<*>
                BLOCK_BODY
                  CLASS CLASS name:Add_78I modality:ABSTRACT visibility:local superTypes:[kotlin.Any]
                    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Container.df4.<anonymous>.Add_78I
                    CONSTRUCTOR GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] visibility:public <> () returnType:<root>.Container.df4.<anonymous>.Add_78I [primary]
                      BLOCK_BODY
                        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Add_78I modality:ABSTRACT visibility:local superTypes:[kotlin.Any]'
                    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
                      overridden:
                        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
                    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
                      overridden:
                        public open fun hashCode (): kotlin.Int declared in kotlin.Any
                      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
                      overridden:
                        public open fun toString (): kotlin.String declared in kotlin.Any
                      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                    PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.TokenGenerator.Key] name:b visibility:public modality:ABSTRACT [val]
                      annotations:
                        Order(order = 0)
                      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-b> visibility:public modality:ABSTRACT <> ($this:<root>.Container.df4.<anonymous>.Add_78I) returnType:kotlin.Int
                        correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.TokenGenerator.Key] name:b visibility:public modality:ABSTRACT [val]
                        $this: VALUE_PARAMETER name:<this> type:<root>.Container.df4.<anonymous>.Add_78I
                  CLASS CLASS name:Scope0 modality:FINAL visibility:local superTypes:[kotlin.Any]
                    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Container.df4.<anonymous>.Scope0
                    PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:b visibility:public modality:FINAL [val]
                      FIELD PROPERTY_BACKING_FIELD name:b type:kotlin.Int visibility:private [final]
                      FUN GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:<get-b> visibility:public modality:FINAL <> ($this:<root>.Container.df4.<anonymous>.Scope0, $receiver:org.jetbrains.kotlinx.dataframe.DataRow<<root>.Container.df4.<anonymous>.Add_78I>) returnType:kotlin.Int
                        annotations:
                          JvmName(name = "Add_78I_b")
                        correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:b visibility:public modality:FINAL [val]
                        $this: VALUE_PARAMETER name:<this> type:<root>.Container.df4.<anonymous>.Scope0
                        $receiver: VALUE_PARAMETER name:<this> type:org.jetbrains.kotlinx.dataframe.DataRow<<root>.Container.df4.<anonymous>.Add_78I>
                        BLOCK_BODY
                          RETURN type=kotlin.Int from='public final fun <get-b> (): kotlin.Int declared in <root>.Container.df4.<anonymous>.Scope0'
                            TYPE_OP type=kotlin.Int origin=CAST typeOperand=kotlin.Int
                              CALL 'public abstract fun get (name: kotlin.String): kotlin.Any? declared in org.jetbrains.kotlinx.dataframe.DataRow' type=kotlin.Any? origin=null
                                $this: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.DataRow<<root>.Container.df4.<anonymous>.Add_78I> declared in <root>.Container.df4.<anonymous>.Scope0.<get-b>' type=org.jetbrains.kotlinx.dataframe.DataRow<<root>.Container.df4.<anonymous>.Add_78I> origin=null
                                name: CONST String type=kotlin.String value="b"
                    PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:b visibility:public modality:FINAL [val]
                      FIELD PROPERTY_BACKING_FIELD name:b type:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> visibility:private [final]
                      FUN GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:<get-b> visibility:public modality:FINAL <> ($this:<root>.Container.df4.<anonymous>.Scope0, $receiver:org.jetbrains.kotlinx.dataframe.ColumnsContainer<<root>.Container.df4.<anonymous>.Add_78I>) returnType:org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int>
                        annotations:
                          JvmName(name = "Add_78I_b")
                        correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] name:b visibility:public modality:FINAL [val]
                        $this: VALUE_PARAMETER name:<this> type:<root>.Container.df4.<anonymous>.Scope0
                        $receiver: VALUE_PARAMETER name:<this> type:org.jetbrains.kotlinx.dataframe.ColumnsContainer<<root>.Container.df4.<anonymous>.Add_78I>
                        BLOCK_BODY
                          RETURN type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> from='public final fun <get-b> (): org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> declared in <root>.Container.df4.<anonymous>.Scope0'
                            TYPE_OP type=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int> origin=CAST typeOperand=org.jetbrains.kotlinx.dataframe.DataColumn<kotlin.Int>
                              CALL 'public open fun get (columnName: kotlin.String): org.jetbrains.kotlinx.dataframe.DataColumn<*> declared in org.jetbrains.kotlinx.dataframe.ColumnsContainer' type=kotlin.Any? origin=null
                                $this: GET_VAR '<this>: org.jetbrains.kotlinx.dataframe.ColumnsContainer<<root>.Container.df4.<anonymous>.Add_78I> declared in <root>.Container.df4.<anonymous>.Scope0.<get-b>' type=org.jetbrains.kotlinx.dataframe.ColumnsContainer<<root>.Container.df4.<anonymous>.Add_78I> origin=null
                                columnName: CONST String type=kotlin.String value="b"
                    CONSTRUCTOR GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] visibility:public <> () returnType:<root>.Container.df4.<anonymous>.Scope0 [primary]
                      BLOCK_BODY
                        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
                        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Scope0 modality:FINAL visibility:local superTypes:[kotlin.Any]'
                    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
                      overridden:
                        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
                      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
                    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
                      overridden:
                        public open fun hashCode (): kotlin.Int declared in kotlin.Any
                      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
                      overridden:
                        public open fun toString (): kotlin.String declared in kotlin.Any
                      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                  CLASS CLASS name:Add_78 modality:ABSTRACT visibility:local superTypes:[<root>.Container.df4.<anonymous>.Add_78I]
                    $this: VALUE_PARAMETER INSTANCE_RECEIVER name:<this> type:<root>.Container.df4.<anonymous>.Add_78
                    CONSTRUCTOR GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.DataFramePlugin] visibility:public <> () returnType:<root>.Container.df4.<anonymous>.Add_78 [primary]
                      BLOCK_BODY
                        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in <root>.Container.df4.<anonymous>.Add_78I'
                        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Add_78 modality:ABSTRACT visibility:local superTypes:[<root>.Container.df4.<anonymous>.Add_78I]'
                    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
                      overridden:
                        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in <root>.Container.df4.<anonymous>.Add_78I
                      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
                    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
                      overridden:
                        public open fun hashCode (): kotlin.Int declared in <root>.Container.df4.<anonymous>.Add_78I
                      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
                      overridden:
                        public open fun toString (): kotlin.String declared in <root>.Container.df4.<anonymous>.Add_78I
                      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
                    PROPERTY FAKE_OVERRIDE name:b visibility:public modality:ABSTRACT [fake_override,val]
                      annotations:
                        Order(order = 0)
                      overridden:
                        public abstract b: kotlin.Int declared in <root>.Container.df4.<anonymous>.Add_78I
                      FUN FAKE_OVERRIDE name:<get-b> visibility:public modality:ABSTRACT <> ($this:<root>.Container.df4.<anonymous>.Add_78I) returnType:kotlin.Int [fake_override]
                        correspondingProperty: PROPERTY FAKE_OVERRIDE name:b visibility:public modality:ABSTRACT [fake_override,val]
                        overridden:
                          public abstract fun <get-b> (): kotlin.Int declared in <root>.Container.df4.<anonymous>.Add_78I
                        $this: VALUE_PARAMETER name:<this> type:<root>.Container.df4.<anonymous>.Add_78I
                    PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.TokenGenerator.Key] name:scope0 visibility:public modality:ABSTRACT [var]
                      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-scope0> visibility:public modality:ABSTRACT <> ($this:<root>.Container.df4.<anonymous>.Add_78) returnType:<root>.Container.df4.<anonymous>.Scope0
                        correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.TokenGenerator.Key] name:scope0 visibility:public modality:ABSTRACT [var]
                        $this: VALUE_PARAMETER name:<this> type:<root>.Container.df4.<anonymous>.Add_78
                      FUN DEFAULT_PROPERTY_ACCESSOR name:<set-scope0> visibility:public modality:ABSTRACT <> ($this:<root>.Container.df4.<anonymous>.Add_78, <set-?>:<root>.Container.df4.<anonymous>.Scope0) returnType:kotlin.Unit
                        correspondingProperty: PROPERTY GENERATED[org.jetbrains.kotlin.fir.dataframe.extensions.TokenGenerator.Key] name:scope0 visibility:public modality:ABSTRACT [var]
                        $this: VALUE_PARAMETER name:<this> type:<root>.Container.df4.<anonymous>.Add_78
                        VALUE_PARAMETER name:<set-?> index:0 type:<root>.Container.df4.<anonymous>.Scope0
                  RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: org.jetbrains.kotlinx.dataframe.DataFrame<*>): org.jetbrains.kotlinx.dataframe.DataFrame<<root>.Container.df4.<anonymous>.Add_78> declared in <root>.Container.df4'
                    CALL 'public final fun add <R, T> (name: kotlin.String, infer: org.jetbrains.kotlinx.dataframe.api.Infer, expression: @[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<T of org.jetbrains.kotlinx.dataframe.api.add>, R of org.jetbrains.kotlinx.dataframe.api.add>): org.jetbrains.kotlinx.dataframe.DataFrame<T of org.jetbrains.kotlinx.dataframe.api.add> declared in org.jetbrains.kotlinx.dataframe.api' type=org.jetbrains.kotlinx.dataframe.DataFrame<<root>.Container.df4.<anonymous>.Add_78> origin=null
                      <R>: kotlin.Int
                      <T>: kotlin.Any?
                      $receiver: GET_VAR 'it: org.jetbrains.kotlinx.dataframe.DataFrame<*> declared in <root>.Container.df4.<anonymous>' type=org.jetbrains.kotlinx.dataframe.DataFrame<*> origin=null
                      name: CONST String type=kotlin.String value="b"
                      expression: FUN_EXPR type=@[ExtensionFunctionType] kotlin.Function2<org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, kotlin.Int> origin=LAMBDA
                        FUN LOCAL_FUNCTION_FOR_LAMBDA name:<anonymous> visibility:local modality:FINAL <> ($receiver:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>, it:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>) returnType:kotlin.Int
                          $receiver: VALUE_PARAMETER name:$this$add type:org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
                          VALUE_PARAMETER name:it index:0 type:@[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>
                          BLOCK_BODY
                            RETURN type=kotlin.Nothing from='local final fun <anonymous> (it: @[ParameterName(name = "it")] org.jetbrains.kotlinx.dataframe.api.AddDataRow<kotlin.Any?>): kotlin.Int declared in <root>.Container.df4.<anonymous>'
                              CONST Int type=kotlin.Int value=2
      FUN DEFAULT_PROPERTY_ACCESSOR name:<get-df4> visibility:private modality:FINAL <> ($this:<root>.Container) returnType:org.jetbrains.kotlinx.dataframe.DataFrame<<root>.Container.df4.<anonymous>.Add_78>
        correspondingProperty: PROPERTY name:df4 visibility:private modality:FINAL [val]
        $this: VALUE_PARAMETER name:<this> type:<root>.Container
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='private final fun <get-df4> (): org.jetbrains.kotlinx.dataframe.DataFrame<<root>.Container.df4.<anonymous>.Add_78> declared in <root>.Container'
            GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:df4 type:org.jetbrains.kotlinx.dataframe.DataFrame<<root>.Container.df4.<anonymous>.Add_78> visibility:private [final]' type=org.jetbrains.kotlinx.dataframe.DataFrame<<root>.Container.df4.<anonymous>.Add_78> origin=null
              receiver: GET_VAR '<this>: <root>.Container declared in <root>.Container.<get-df4>' type=<root>.Container origin=null
    CONSTRUCTOR visibility:public <> () returnType:<root>.Container [primary]
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'public constructor <init> () declared in kotlin.Any'
        INSTANCE_INITIALIZER_CALL classDescriptor='CLASS CLASS name:Container modality:FINAL visibility:public superTypes:[kotlin.Any]'
    FUN FAKE_OVERRIDE name:equals visibility:public modality:OPEN <> ($this:kotlin.Any, other:kotlin.Any?) returnType:kotlin.Boolean [fake_override,operator]
      overridden:
        public open fun equals (other: kotlin.Any?): kotlin.Boolean declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
      VALUE_PARAMETER name:other index:0 type:kotlin.Any?
    FUN FAKE_OVERRIDE name:hashCode visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.Int [fake_override]
      overridden:
        public open fun hashCode (): kotlin.Int declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
    FUN FAKE_OVERRIDE name:toString visibility:public modality:OPEN <> ($this:kotlin.Any) returnType:kotlin.String [fake_override]
      overridden:
        public open fun toString (): kotlin.String declared in kotlin.Any
      $this: VALUE_PARAMETER name:<this> type:kotlin.Any
  FUN name:box visibility:public modality:FINAL <> () returnType:kotlin.String
    BLOCK_BODY
      RETURN type=kotlin.Nothing from='public final fun box (): kotlin.String declared in <root>'
        CONST String type=kotlin.String value="OK"
