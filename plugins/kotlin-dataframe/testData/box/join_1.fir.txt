FILE: join_1.kt
    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public final data class Sessions : R|kotlin/Any|, R|org/jetbrains/kotlinx/dataframe/api/DataRowSchema| {
        public constructor(roomId: R|kotlin/Int|): R|Sessions| {
            super<R|kotlin/Any|>()
        }

        public final val roomId: R|kotlin/Int| = R|<local>/roomId|
            public get(): R|kotlin/Int|

        public final operator fun component1(): R|kotlin/Int|

        public final fun copy(roomId: R|kotlin/Int| = this@R|/Sessions|.R|/Sessions.roomId|): R|Sessions|

    }
    @R|org/jetbrains/kotlinx/dataframe/annotations/DataSchema|() public final data class Rooms : R|kotlin/Any|, R|org/jetbrains/kotlinx/dataframe/api/DataRowSchema| {
        public constructor(id: R|kotlin/Int|, sort: R|kotlin/Int|, name: R|kotlin/String|): R|Rooms| {
            super<R|kotlin/Any|>()
        }

        public final val id: R|kotlin/Int| = R|<local>/id|
            public get(): R|kotlin/Int|

        public final val sort: R|kotlin/Int| = R|<local>/sort|
            public get(): R|kotlin/Int|

        public final val name: R|kotlin/String| = R|<local>/name|
            public get(): R|kotlin/String|

        public final operator fun component1(): R|kotlin/Int|

        public final operator fun component2(): R|kotlin/Int|

        public final operator fun component3(): R|kotlin/String|

        public final fun copy(id: R|kotlin/Int| = this@R|/Rooms|.R|/Rooms.id|, sort: R|kotlin/Int| = this@R|/Rooms|.R|/Rooms.sort|, name: R|kotlin/String| = this@R|/Rooms|.R|/Rooms.name|): R|Rooms|

    }
    public final fun box(): R|kotlin/String| {
        lval rooms: R|org/jetbrains/kotlinx/dataframe/DataFrame<Rooms>| = R|org/jetbrains/kotlinx/dataframe/api/dataFrameOf|<R|Rooms|>(vararg(R|/Rooms.Rooms|(Int(1), Int(2), String(n))))
        lval sessions: R|org/jetbrains/kotlinx/dataframe/DataFrame<Sessions>| = R|org/jetbrains/kotlinx/dataframe/api/dataFrameOf|<R|Sessions|>(vararg(R|/Sessions.Sessions|(Int(1))))
        lval df: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Sessions_30>| = R|<local>/sessions|.R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/DataFrame<Sessions>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Sessions_30>|>(<L> = fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/DataFrame<Sessions>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Sessions_30>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class Sessions_30I : R|kotlin/Any| {
                public abstract val roomId: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public abstract val room: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_921>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_921>|

                public constructor(): R|<local>/Sessions_30I|

            }

            local final class Scope0 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Sessions_30I>|.roomId: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Sessions_30I>|.roomId: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Sessions_30I>|.room: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_921>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_921>|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Sessions_30I>|.room: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/Room_921>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/Room_921>|

                public constructor(): R|<local>/Scope0|

            }

            local abstract class Room_921 : R|kotlin/Any| {
                public abstract val sort: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public abstract val name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public constructor(): R|<local>/Room_921|

            }

            local final class Scope1 : R|kotlin/Any| {
                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_921>|.sort: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Room_921>|.sort: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_921>|.name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Room_921>|.name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                public constructor(): R|<local>/Scope1|

            }

            local abstract class Sessions_30 : R|<local>/Sessions_30I| {
                public abstract var scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|
                    public set(value: R|<local>/Scope0|): R|kotlin/Unit|

                public abstract var scope1: R|<local>/Scope1|
                    public get(): R|<local>/Scope1|
                    public set(value: R|<local>/Scope1|): R|kotlin/Unit|

                public constructor(): R|<local>/Sessions_30|

            }

            ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/join|<R|Sessions|, R|<local>/Into_72|>(R|<local>/rooms|.R|org/jetbrains/kotlinx/dataframe/api/group|<R|Rooms|, R|it(kotlin/Comparable<*> & java/io/Serializable)|>(<L> = group@fun R|org/jetbrains/kotlinx/dataframe/api/ColumnsSelectionDsl<Rooms>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/api/ColumnsSelectionDsl<Rooms>|): R|org/jetbrains/kotlinx/dataframe/columns/ColumnsResolver<it(kotlin/Comparable<*> & java/io/Serializable)>| <inline=NoInline>  {
                ^ (this@R|special/anonymous|, (this@R|special/anonymous|, this@R|special/anonymous|.R|/id|).R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/api/ColumnsSelectionDsl.and: R|org/jetbrains/kotlinx/dataframe/columns/ColumnSet<C>|>|<R|it(kotlin/Comparable<*> & java/io/Serializable)|>(this@R|special/anonymous|.R|/name|)).R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/api/ColumnsSelectionDsl.and: R|org/jetbrains/kotlinx/dataframe/columns/ColumnSet<C>|>|<R|it(kotlin/Comparable<*> & java/io/Serializable)|>(this@R|special/anonymous|.R|/sort|)
            }
            ).R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/api/GroupClause<Rooms, it(kotlin/Comparable<*> & java/io/Serializable)>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Into_72>|>(<L> = fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/api/GroupClause<Rooms, it(kotlin/Comparable<*> & java/io/Serializable)>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Into_72>| <inline=Inline, kind=EXACTLY_ONCE>  {
                local abstract class Into_72I : R|kotlin/Any| {
                    public abstract val room: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_701>|
                        public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_701>|

                    public constructor(): R|<local>/Into_72I|

                }

                local final class Scope0 : R|kotlin/Any| {
                    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Into_72I>|.room: R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_701>|
                        public get(): R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_701>|

                    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Into_72I>|.room: R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/Room_701>|
                        public get(): R|org/jetbrains/kotlinx/dataframe/columns/ColumnGroup<<local>/Room_701>|

                    public constructor(): R|<local>/Scope0|

                }

                local abstract class Room_701 : R|kotlin/Any| {
                    public abstract val id: R|kotlin/Int|
                        public get(): R|kotlin/Int|

                    public abstract val sort: R|kotlin/Int|
                        public get(): R|kotlin/Int|

                    public abstract val name: R|kotlin/String|
                        public get(): R|kotlin/String|

                    public constructor(): R|<local>/Room_701|

                }

                local final class Scope1 : R|kotlin/Any| {
                    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_701>|.id: R|kotlin/Int|
                        public get(): R|kotlin/Int|

                    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Room_701>|.id: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_701>|.sort: R|kotlin/Int|
                        public get(): R|kotlin/Int|

                    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Room_701>|.sort: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|

                    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/Room_701>|.name: R|kotlin/String|
                        public get(): R|kotlin/String|

                    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/Room_701>|.name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|

                    public constructor(): R|<local>/Scope1|

                }

                local abstract class Into_72 : R|<local>/Into_72I| {
                    public abstract var scope0: R|<local>/Scope0|
                        public get(): R|<local>/Scope0|
                        public set(value: R|<local>/Scope0|): R|kotlin/Unit|

                    public abstract var scope1: R|<local>/Scope1|
                        public get(): R|<local>/Scope1|
                        public set(value: R|<local>/Scope1|): R|kotlin/Unit|

                    public constructor(): R|<local>/Into_72|

                }

                ^ R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/into|<R|Rooms|, R|it(kotlin/Comparable<*> & java/io/Serializable)|>(String(room))
            }
            ), <L> = join@fun R|org/jetbrains/kotlinx/dataframe/api/JoinDsl<Sessions, <local>/Into_72>|.<anonymous>(it: R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<Sessions>|): R|org/jetbrains/kotlinx/dataframe/columns/ColumnsResolver<*>| <inline=NoInline>  {
                ^ (this@R|special/anonymous|, this@R|special/anonymous|.R|/roomId|).R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/api/JoinDsl.match: R|org/jetbrains/kotlinx/dataframe/api/ColumnMatch<C>|>|<R|kotlin/Int|>((this@R|/box|, (this@R|/box|, this@R|special/anonymous|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/api/JoinDsl.right: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/Into_72>|>|).R|<local>/Scope0.room|).R|<local>/Scope1.id|)
            }
            )
        }
        )
        (this@R|/box|, R|<local>/df|).R|<local>/Scope0.roomId|
        (this@R|/box|, (this@R|/box|, R|<local>/df|).R|<local>/Scope0.room|).R|<local>/Scope1.sort|
        (this@R|/box|, (this@R|/box|, R|<local>/df|).R|<local>/Scope0.room|).R|<local>/Scope1.name|
        ^box String(OK)
    }
FILE: __GENERATED DECLARATIONS__.kt
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<Sessions>|.roomId: R|kotlin/Int|
        public get(): R|kotlin/Int|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<Sessions>|.roomId: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<Rooms>|.id: R|kotlin/Int|
        public get(): R|kotlin/Int|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<Rooms>|.id: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<Rooms>|.sort: R|kotlin/Int|
        public get(): R|kotlin/Int|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<Rooms>|.sort: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
    public final val R|org/jetbrains/kotlinx/dataframe/DataRow<Rooms>|.name: R|kotlin/String|
        public get(): R|kotlin/String|
    public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<Rooms>|.name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
        public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
