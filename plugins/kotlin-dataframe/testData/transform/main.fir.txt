FILE: main.kt
    package org.jetbrains.kotlinx.dataframe

    public final fun box(): R|kotlin/String| {
        lval df: R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_1639480572>| = Q|org/jetbrains/kotlinx/dataframe/DataFrame|.R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/DataFrame.Companion|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_1639480572>|>(<L> = let@fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/DataFrame.Companion|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_1639480572>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class DataFrameType1 : R|kotlin/Any| {
                public constructor(): R|<local>/DataFrameType1| {
                    super<R|kotlin/Any|>()
                }

                public abstract val full_name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val html_url: R|java/net/URL|
                    public get(): R|java/net/URL|

                public abstract val stargazers_count: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public abstract val topics: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val watchers: R|kotlin/Int|
                    public get(): R|kotlin/Int|

            }

            local final class Scope0 : R|kotlin/Any| {
                public constructor(): R|<local>/Scope0| {
                    super<R|kotlin/Any|>()
                }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.full_name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_full_name)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>| {
                        ^ (this@R|<local>/full_name|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(full_name)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.full_name: R|kotlin/String|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_full_name)) public get(): R|kotlin/String| {
                        ^ (this@R|<local>/full_name|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(full_name)) as R|kotlin/String|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.html_url: R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_html_url)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>| {
                        ^ (this@R|<local>/html_url|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(html_url)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.html_url: R|java/net/URL|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_html_url)) public get(): R|java/net/URL| {
                        ^ (this@R|<local>/html_url|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(html_url)) as R|java/net/URL|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.stargazers_count: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_stargazers_count)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/stargazers_count|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(stargazers_count)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.stargazers_count: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_stargazers_count)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/stargazers_count|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(stargazers_count)) as R|kotlin/Int|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.topics: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_topics)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>| {
                        ^ (this@R|<local>/topics|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(topics)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.topics: R|kotlin/String|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_topics)) public get(): R|kotlin/String| {
                        ^ (this@R|<local>/topics|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(topics)) as R|kotlin/String|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.watchers: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_watchers)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/watchers|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(watchers)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.watchers: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_watchers)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/watchers|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(watchers)) as R|kotlin/Int|)
                    }

            }

            local abstract class TokenReadCSVDefault_1639480572 : R|<local>/DataFrameType1| {
                public constructor(): R|<local>/TokenReadCSVDefault_1639480572| {
                    super<R|<local>/DataFrameType1|>()
                }

                public abstract val scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|

            }

            ^ (R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/readCSVDefault|(String(https://raw.githubusercontent.com/Kotlin/dataframe/master/data/jetbrains_repositories.csv)) as R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_1639480572>|)
        }
        )
        (this@R|org/jetbrains/kotlinx/dataframe/box|, R|<local>/df|).R|<local>/stargazers_count|.R|org/jetbrains/kotlinx/dataframe/api/print|<R|kotlin/Int|>()
        R|<local>/df|.R|org/jetbrains/kotlinx/dataframe/api/filter|<R|<local>/TokenReadCSVDefault_1639480572|>(<L> = filter@fun R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/TokenReadCSVDefault_1639480572>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/DataRow<<local>/TokenReadCSVDefault_1639480572>|): R|kotlin/Boolean| <inline=NoInline>  {
            ^ CMP(>, (this@R|org/jetbrains/kotlinx/dataframe/box|, this@R|special/anonymous|).R|<local>/stargazers_count|.R|kotlin/Int.compareTo|(Int(50)))
        }
        ).R|org/jetbrains/kotlinx/dataframe/api/print|<R|<local>/TokenReadCSVDefault_1639480572|>()
        (this@R|org/jetbrains/kotlinx/dataframe/box|, R|<local>/df|.R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/DataFrame<*>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_102151291>|>(<L> = let@fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/DataFrame<*>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_102151291>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class DataFrameType1 : R|kotlin/Any| {
                public constructor(): R|<local>/DataFrameType1| {
                    super<R|kotlin/Any|>()
                }

                public abstract val full_name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val html_url: R|java/net/URL|
                    public get(): R|java/net/URL|

                public abstract val stargazers_count: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public abstract val topics: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val watchers: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public abstract val hello: R|kotlin/Int|
                    public get(): R|kotlin/Int|

            }

            local final class Scope0 : R|kotlin/Any| {
                public constructor(): R|<local>/Scope0| {
                    super<R|kotlin/Any|>()
                }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.full_name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_full_name)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>| {
                        ^ (this@R|<local>/full_name|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(full_name)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.full_name: R|kotlin/String|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_full_name)) public get(): R|kotlin/String| {
                        ^ (this@R|<local>/full_name|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(full_name)) as R|kotlin/String|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.html_url: R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_html_url)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>| {
                        ^ (this@R|<local>/html_url|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(html_url)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.html_url: R|java/net/URL|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_html_url)) public get(): R|java/net/URL| {
                        ^ (this@R|<local>/html_url|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(html_url)) as R|java/net/URL|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.stargazers_count: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_stargazers_count)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/stargazers_count|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(stargazers_count)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.stargazers_count: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_stargazers_count)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/stargazers_count|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(stargazers_count)) as R|kotlin/Int|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.topics: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_topics)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>| {
                        ^ (this@R|<local>/topics|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(topics)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.topics: R|kotlin/String|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_topics)) public get(): R|kotlin/String| {
                        ^ (this@R|<local>/topics|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(topics)) as R|kotlin/String|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.watchers: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_watchers)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/watchers|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(watchers)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.watchers: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_watchers)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/watchers|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(watchers)) as R|kotlin/Int|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.hello: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_hello)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/hello|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(hello)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.hello: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_hello)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/hello|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(hello)) as R|kotlin/Int|)
                    }

            }

            local abstract class TokenReadCSVDefault_102151291 : R|<local>/DataFrameType1| {
                public constructor(): R|<local>/TokenReadCSVDefault_102151291| {
                    super<R|<local>/DataFrameType1|>()
                }

                public abstract val scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|

            }

            ^ (R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/add|<R|kotlin/Int|, R|<local>/TokenReadCSVDefault_1639480572|>(String(hello), <L> = add@fun R|org/jetbrains/kotlinx/dataframe/api/AddDataRow<<local>/TokenReadCSVDefault_1639480572>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/api/AddDataRow<<local>/TokenReadCSVDefault_1639480572>|): R|kotlin/Int| <inline=NoInline>  {
                ^ Int(42)
            }
            ) as R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_102151291>|)
        }
        )).R|<local>/hello|
        R|<local>/df|.R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/DataFrame<*>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_102151291>|>(<L> = let@fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/DataFrame<*>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_102151291>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class DataFrameType1 : R|kotlin/Any| {
                public constructor(): R|<local>/DataFrameType1| {
                    super<R|kotlin/Any|>()
                }

                public abstract val full_name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val html_url: R|java/net/URL|
                    public get(): R|java/net/URL|

                public abstract val stargazers_count: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public abstract val topics: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val watchers: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public abstract val hello: R|kotlin/Int|
                    public get(): R|kotlin/Int|

            }

            local final class Scope0 : R|kotlin/Any| {
                public constructor(): R|<local>/Scope0| {
                    super<R|kotlin/Any|>()
                }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.full_name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_full_name)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>| {
                        ^ (this@R|<local>/full_name|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(full_name)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.full_name: R|kotlin/String|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_full_name)) public get(): R|kotlin/String| {
                        ^ (this@R|<local>/full_name|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(full_name)) as R|kotlin/String|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.html_url: R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_html_url)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>| {
                        ^ (this@R|<local>/html_url|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(html_url)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.html_url: R|java/net/URL|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_html_url)) public get(): R|java/net/URL| {
                        ^ (this@R|<local>/html_url|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(html_url)) as R|java/net/URL|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.stargazers_count: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_stargazers_count)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/stargazers_count|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(stargazers_count)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.stargazers_count: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_stargazers_count)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/stargazers_count|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(stargazers_count)) as R|kotlin/Int|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.topics: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_topics)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>| {
                        ^ (this@R|<local>/topics|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(topics)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.topics: R|kotlin/String|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_topics)) public get(): R|kotlin/String| {
                        ^ (this@R|<local>/topics|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(topics)) as R|kotlin/String|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.watchers: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_watchers)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/watchers|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(watchers)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.watchers: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_watchers)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/watchers|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(watchers)) as R|kotlin/Int|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.hello: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_hello)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/hello|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(hello)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.hello: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_hello)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/hello|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(hello)) as R|kotlin/Int|)
                    }

            }

            local abstract class TokenReadCSVDefault_102151291 : R|<local>/DataFrameType1| {
                public constructor(): R|<local>/TokenReadCSVDefault_102151291| {
                    super<R|<local>/DataFrameType1|>()
                }

                public abstract val scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|

            }

            ^ (R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/add|<R|kotlin/Int|, R|<local>/TokenReadCSVDefault_1639480572|>(String(hello), <L> = add@fun R|org/jetbrains/kotlinx/dataframe/api/AddDataRow<<local>/TokenReadCSVDefault_1639480572>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/api/AddDataRow<<local>/TokenReadCSVDefault_1639480572>|): R|kotlin/Int| <inline=NoInline>  {
                ^ Int(42)
            }
            ) as R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_102151291>|)
        }
        ).R|kotlin/let|<R|org/jetbrains/kotlinx/dataframe/DataFrame<*>|, R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_1217946296>|>(<L> = let@fun <anonymous>(it: R|org/jetbrains/kotlinx/dataframe/DataFrame<*>|): R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_1217946296>| <inline=Inline, kind=EXACTLY_ONCE>  {
            local abstract class DataFrameType1 : R|kotlin/Any| {
                public constructor(): R|<local>/DataFrameType1| {
                    super<R|kotlin/Any|>()
                }

                public abstract val full_name: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val html_url: R|java/net/URL|
                    public get(): R|java/net/URL|

                public abstract val stargazers_count: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public abstract val topics: R|kotlin/String|
                    public get(): R|kotlin/String|

                public abstract val watchers: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public abstract val hello: R|kotlin/Int|
                    public get(): R|kotlin/Int|

                public abstract val hello1: R|kotlin/Int|
                    public get(): R|kotlin/Int|

            }

            local final class Scope0 : R|kotlin/Any| {
                public constructor(): R|<local>/Scope0| {
                    super<R|kotlin/Any|>()
                }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.full_name: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_full_name)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>| {
                        ^ (this@R|<local>/full_name|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(full_name)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.full_name: R|kotlin/String|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_full_name)) public get(): R|kotlin/String| {
                        ^ (this@R|<local>/full_name|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(full_name)) as R|kotlin/String|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.html_url: R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_html_url)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>| {
                        ^ (this@R|<local>/html_url|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(html_url)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<java/net/URL>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.html_url: R|java/net/URL|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_html_url)) public get(): R|java/net/URL| {
                        ^ (this@R|<local>/html_url|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(html_url)) as R|java/net/URL|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.stargazers_count: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_stargazers_count)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/stargazers_count|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(stargazers_count)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.stargazers_count: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_stargazers_count)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/stargazers_count|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(stargazers_count)) as R|kotlin/Int|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.topics: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_topics)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>| {
                        ^ (this@R|<local>/topics|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(topics)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/String>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.topics: R|kotlin/String|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_topics)) public get(): R|kotlin/String| {
                        ^ (this@R|<local>/topics|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(topics)) as R|kotlin/String|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.watchers: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_watchers)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/watchers|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(watchers)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.watchers: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_watchers)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/watchers|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(watchers)) as R|kotlin/Int|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.hello: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_hello)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/hello|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(hello)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.hello: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_hello)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/hello|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(hello)) as R|kotlin/Int|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/ColumnsContainer<<local>/DataFrameType1>|.hello1: R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_hello1)) public get(): R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>| {
                        ^ (this@R|<local>/hello1|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/ColumnsContainer.get: R|org/jetbrains/kotlinx/dataframe/DataColumn<*>|>|(String(hello1)) as R|org/jetbrains/kotlinx/dataframe/DataColumn<kotlin/Int>|)
                    }

                public final val R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/DataFrameType1>|.hello1: R|kotlin/Int|
                    @R|kotlin/jvm/JvmName|(name = String(DataFrameType1_hello1)) public get(): R|kotlin/Int| {
                        ^ (this@R|<local>/hello1|.R|SubstitutionOverride<org/jetbrains/kotlinx/dataframe/DataRow.get: R|kotlin/Any?|>|(String(hello1)) as R|kotlin/Int|)
                    }

            }

            local abstract class TokenReadCSVDefault_1217946296 : R|<local>/DataFrameType1| {
                public constructor(): R|<local>/TokenReadCSVDefault_1217946296| {
                    super<R|<local>/DataFrameType1|>()
                }

                public abstract val scope0: R|<local>/Scope0|
                    public get(): R|<local>/Scope0|

            }

            ^ (R|<local>/it|.R|org/jetbrains/kotlinx/dataframe/api/add|<R|kotlin/Int|, R|<local>/TokenReadCSVDefault_102151291|>(String(hello1), <L> = add@fun R|org/jetbrains/kotlinx/dataframe/api/AddDataRow<<local>/TokenReadCSVDefault_102151291>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/api/AddDataRow<<local>/TokenReadCSVDefault_102151291>|): R|kotlin/Int| <inline=NoInline>  {
                ^ (this@R|org/jetbrains/kotlinx/dataframe/box|, this@R|special/anonymous|).R|<local>/hello|.R|kotlin/Int.plus|(Int(3))
            }
            ) as R|org/jetbrains/kotlinx/dataframe/DataFrame<<local>/TokenReadCSVDefault_1217946296>|)
        }
        )
        R|<local>/df|.R|org/jetbrains/kotlinx/dataframe/api/sortByDesc|<R|<local>/TokenReadCSVDefault_1639480572|, R|kotlin/Int|>(<L> = sortByDesc@fun R|org/jetbrains/kotlinx/dataframe/api/SortDsl<<local>/TokenReadCSVDefault_1639480572>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/api/SortDsl<<local>/TokenReadCSVDefault_1639480572>|): R|org/jetbrains/kotlinx/dataframe/columns/ColumnSet<kotlin/Int>| <inline=NoInline>  {
            ^ (this@R|org/jetbrains/kotlinx/dataframe/box|, this@R|special/anonymous|).R|<local>/stargazers_count|
        }
        ).R|org/jetbrains/kotlinx/dataframe/api/print|<R|<local>/TokenReadCSVDefault_1639480572|>(rowsLimit = Int(10))
        R|kotlin/io/println|(R|<local>/df|.R|org/jetbrains/kotlinx/dataframe/api/count|<R|<local>/TokenReadCSVDefault_1639480572|>(<L> = count@fun R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/TokenReadCSVDefault_1639480572>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/DataRow<<local>/TokenReadCSVDefault_1639480572>|): R|kotlin/Boolean| <inline=NoInline>  {
            ^ CMP(>, (this@R|org/jetbrains/kotlinx/dataframe/box|, this@R|special/anonymous|).R|<local>/stargazers_count|.R|kotlin/Int.compareTo|(Int(50)))
        }
        ))
        R|kotlin/io/println|(R|<local>/df|.R|org/jetbrains/kotlinx/dataframe/api/count|<R|<local>/TokenReadCSVDefault_1639480572|>(<L> = count@fun R|org/jetbrains/kotlinx/dataframe/DataRow<<local>/TokenReadCSVDefault_1639480572>|.<anonymous>(it: R|@R|kotlin/ParameterName|(name = String(it))  org/jetbrains/kotlinx/dataframe/DataRow<<local>/TokenReadCSVDefault_1639480572>|): R|kotlin/Boolean| <inline=NoInline>  {
            ^ ==((this@R|org/jetbrains/kotlinx/dataframe/box|, this@R|special/anonymous|).R|<local>/stargazers_count|, Int(0))
        }
        ))
        ^box String(OK)
    }
